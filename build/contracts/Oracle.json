{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "callbackAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "exp_time",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_sender",
          "type": "address"
        },
        {
          "name": "_payment",
          "type": "uint256"
        },
        {
          "name": "_specId",
          "type": "bytes32"
        },
        {
          "name": "_callbackAddress",
          "type": "address"
        },
        {
          "name": "_callbackFunctionId",
          "type": "bytes4"
        },
        {
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "name": "_dataVersion",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "oracleRequest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "payment",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "bytes32"
        },
        {
          "name": "_payment",
          "type": "uint256"
        },
        {
          "name": "_callbackAddress",
          "type": "address"
        },
        {
          "name": "_callbackFunctionId",
          "type": "bytes4"
        },
        {
          "name": "_expiration",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "fulfillOracleRequest",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EXPIRY_TIME",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "withdrawable",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "bytes32"
        },
        {
          "name": "_payment",
          "type": "uint256"
        },
        {
          "name": "_callbackFunc",
          "type": "bytes4"
        },
        {
          "name": "_expiration",
          "type": "uint256"
        }
      ],
      "name": "cancelOracleRequest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_node",
          "type": "address"
        },
        {
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "setFulfillmentPermission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "callbackFunctionId",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_sender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "getAuthorizationStatus",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_recipient",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_link",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "specId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "requester",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "payment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "callbackAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "callbackFunctionId",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "name": "cancelExpiration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "dataVersion",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "OracleRequest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "CancelOracleRequest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/patrick/.brownie/packages/alphachainio/chainlink-contracts@1.1.2/contracts/src/v0.4/interfaces/ChainlinkRequestInterface.sol",
    "1": "/Users/patrick/.brownie/packages/alphachainio/chainlink-contracts@1.1.2/contracts/src/v0.4/interfaces/LinkTokenInterface.sol",
    "2": "/Users/patrick/.brownie/packages/alphachainio/chainlink-contracts@1.1.2/contracts/src/v0.4/interfaces/OracleInterface.sol",
    "3": "/Users/patrick/.brownie/packages/alphachainio/chainlink-contracts@1.1.2/contracts/src/v0.4/vendor/Ownable.sol",
    "4": "/Users/patrick/.brownie/packages/alphachainio/chainlink-contracts@1.1.2/contracts/src/v0.4/vendor/SafeMath.sol",
    "5": "contracts/test_contracts/Oracle.sol"
  },
  "ast": {
    "absolutePath": "contracts/test_contracts/Oracle.sol",
    "exportedSymbols": {
      "Oracle": [
        530
      ]
    },
    "id": 531,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/Users/patrick/.brownie/packages/alphachainio/chainlink-contracts@1.1.2/contracts/src/v0.4/vendor/Ownable.sol",
        "file": "@chainlink/contracts/src/v0.4/vendor/Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 531,
        "sourceUnit": 791,
        "src": "25:58:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/patrick/.brownie/packages/alphachainio/chainlink-contracts@1.1.2/contracts/src/v0.4/vendor/SafeMath.sol",
        "file": "@chainlink/contracts/src/v0.4/vendor/SafeMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 531,
        "sourceUnit": 885,
        "src": "84:59:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/patrick/.brownie/packages/alphachainio/chainlink-contracts@1.1.2/contracts/src/v0.4/interfaces/ChainlinkRequestInterface.sol",
        "file": "@chainlink/contracts/src/v0.4/interfaces/ChainlinkRequestInterface.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 531,
        "sourceUnit": 564,
        "src": "144:80:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/patrick/.brownie/packages/alphachainio/chainlink-contracts@1.1.2/contracts/src/v0.4/interfaces/OracleInterface.sol",
        "file": "@chainlink/contracts/src/v0.4/interfaces/OracleInterface.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 531,
        "sourceUnit": 705,
        "src": "225:70:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/patrick/.brownie/packages/alphachainio/chainlink-contracts@1.1.2/contracts/src/v0.4/interfaces/LinkTokenInterface.sol",
        "file": "@chainlink/contracts/src/v0.4/interfaces/LinkTokenInterface.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 531,
        "sourceUnit": 659,
        "src": "296:73:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "ChainlinkRequestInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 563,
              "src": "582:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChainlinkRequestInterface_$563",
                "typeString": "contract ChainlinkRequestInterface"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "582:25:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "OracleInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 704,
              "src": "609:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OracleInterface_$704",
                "typeString": "contract OracleInterface"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "609:15:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 790,
              "src": "626:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$790",
                "typeString": "contract Ownable"
              }
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "626:7:5"
          }
        ],
        "contractDependencies": [
          563,
          704,
          790
        ],
        "contractKind": "contract",
        "documentation": "@title The Chainlink Oracle contract\n@notice Node operators can deploy this contract to fulfill requests sent to them\n@notice This is a modified Oracle.sol for easier testing",
        "fullyImplemented": true,
        "id": 530,
        "linearizedBaseContracts": [
          530,
          790,
          704,
          563
        ],
        "name": "Oracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 15,
            "libraryName": {
              "contractScope": null,
              "id": 13,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 884,
              "src": "644:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$884",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "638:27:5",
            "typeName": {
              "id": 14,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "657:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 18,
            "name": "payment",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "669:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "669:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "694:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 20,
            "name": "callbackAddress",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "699:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "699:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 22,
            "name": "callbackFunctionId",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "733:32:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 21,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "733:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "name": "exp_time",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "769:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "769:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 27,
            "name": "EXPIRY_TIME",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "797:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "797:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "835:9:5",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_300_by_1",
                "typeString": "int_const 300"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 30,
            "name": "MINIMUM_CONSUMER_GAS_LIMIT",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "848:60:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "848:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "343030303030",
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "902:6:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_400000_by_1",
                "typeString": "int_const 400000"
              },
              "value": "400000"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 33,
            "name": "ONE_FOR_CONSISTENT_GAS_COST",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "1014:56:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1014:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1069:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 36,
            "name": "SELECTOR_LENGTH",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "1074:44:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1074:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "34",
              "id": 35,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1117:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4_by_1",
                "typeString": "int_const 4"
              },
              "value": "4"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 39,
            "name": "EXPECTED_REQUEST_WORDS",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "1122:51:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1122:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 38,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1172:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 47,
            "name": "MINIMUM_REQUEST_LENGTH",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "1177:97:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1177:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 46,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "id": 41,
                "name": "SELECTOR_LENGTH",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 36,
                "src": "1227:15:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "+",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3332",
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1246:2:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32_by_1",
                        "typeString": "int_const 32"
                      },
                      "value": "32"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 43,
                      "name": "EXPECTED_REQUEST_WORDS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1251:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1246:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 45,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "1245:29:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1227:47:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 49,
            "name": "LinkToken",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "1279:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$658",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 48,
              "name": "LinkTokenInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 658,
              "src": "1279:18:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$658",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 53,
            "name": "commitments",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "1320:46:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
              "typeString": "mapping(bytes32 => bytes32)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 50,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1328:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1320:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                "typeString": "mapping(bytes32 => bytes32)"
              },
              "valueType": {
                "id": 51,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1339:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 57,
            "name": "authorizedNodes",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "1370:48:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 56,
              "keyType": {
                "id": 54,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1378:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1370:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 55,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1389:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 60,
            "name": "withdrawableTokens",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "1422:64:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1422:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "id": 59,
              "name": "ONE_FOR_CONSISTENT_GAS_COST",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33,
              "src": "1459:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 80,
            "name": "OracleRequest",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "indexed": true,
                  "name": "specId",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1516:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "name": "requester",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1544:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "indexed": false,
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1567:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1567:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "name": "payment",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1590:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70,
                  "indexed": false,
                  "name": "callbackAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1611:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1611:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "indexed": false,
                  "name": "callbackFunctionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1637:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1637:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "indexed": false,
                  "name": "cancelExpiration",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1668:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1668:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "indexed": false,
                  "name": "dataVersion",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1698:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "indexed": false,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1723:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1510:227:5"
            },
            "src": "1491:247:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 84,
            "name": "CancelOracleRequest",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "indexed": true,
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1773:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1773:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1767:35:5"
            },
            "src": "1742:61:5"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "2039:97:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "LinkToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "2045:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$658",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 93,
                          "name": "_link",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "2076:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 92,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "2057:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$658_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2057:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$658",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "2045:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$658",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "2045:37:5"
                }
              ]
            },
            "documentation": "@notice Deploy with the address of the LINK token\n@dev Sets the LinkToken address for the imported LinkTokenInterface\n@param _link The address of the LINK token",
            "id": 98,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 89,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 88,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 790,
                  "src": "2029:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$790_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2029:9:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "name": "_link",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "2007:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2007:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2006:15:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2039:0:5"
            },
            "scope": 530,
            "src": "1995:141:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "2705:369:5",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "_sender": {
                        "declaration": 100,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2794:7:5",
                        "valueSize": 1
                      }
                    },
                    {
                      "_data": {
                        "declaration": 104,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2782:5:5",
                        "valueSize": 1
                      }
                    },
                    {
                      "_amount": {
                        "declaration": 102,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2867:7:5",
                        "valueSize": 1
                      }
                    },
                    {
                      "_data": {
                        "declaration": 104,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2855:5:5",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 115,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    mstore(add(_data, 36), _sender)\n    mstore(add(_data, 68), _amount)\n}",
                  "src": "2711:272:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 121,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104,
                            "src": "3011:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 118,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 922,
                                "src": "2992:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Oracle_$530",
                                  "typeString": "contract Oracle"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Oracle_$530",
                                  "typeString": "contract Oracle"
                                }
                              ],
                              "id": 117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2984:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2984:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "delegatecall",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2984:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_baredelegatecall_nonpayable$__$returns$_t_bool_$",
                            "typeString": "function () returns (bool)"
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2984:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "556e61626c6520746f206372656174652072657175657374",
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3019:26:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c77c8323757c7c6dd2b21d1591cb61b26bb567563048742ae07b24e5b659c50",
                          "typeString": "literal_string \"Unable to create request\""
                        },
                        "value": "Unable to create request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c77c8323757c7c6dd2b21d1591cb61b26bb567563048742ae07b24e5b659c50",
                          "typeString": "literal_string \"Unable to create request\""
                        }
                      ],
                      "id": 116,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        902,
                        903
                      ],
                      "referencedDeclaration": 903,
                      "src": "2976:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2976:70:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "2976:70:5"
                }
              ]
            },
            "documentation": "@notice Called when LINK is sent to the contract via `transferAndCall`\n@dev The data payload's first 2 words will be overwritten by the `_sender` and `_amount`\nvalues to ensure correctness. Calls oracleRequest.\n@param _sender Address of the sender\n@param _amount Amount of LINK sent (specified in wei)\n@param _data Payload of the transaction",
            "id": 127,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 107,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 106,
                  "name": "onlyLINK",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 481,
                  "src": "2627:8:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2627:8:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 109,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 104,
                    "src": "2659:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 110,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 108,
                  "name": "validRequestLength",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 529,
                  "src": "2640:18:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2640:25:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 112,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 104,
                    "src": "2696:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 113,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 111,
                  "name": "permittedFunctionsForLINK",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 500,
                  "src": "2670:25:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2670:32:5"
              }
            ],
            "name": "onTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "2554:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2554:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "2575:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2575:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "2596:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2596:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2548:63:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2705:0:5"
            },
            "scope": 530,
            "src": "2524:550:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 219,
              "nodeType": "Block",
              "src": "4022:740:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 151,
                      "name": "payment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "4028:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 152,
                      "name": "_payment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "4038:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4028:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "4028:18:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 155,
                      "name": "callbackAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "4052:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 156,
                      "name": "_callbackAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "4070:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4052:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "4052:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 159,
                      "name": "callbackFunctionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "4092:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 160,
                      "name": "_callbackFunctionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "4113:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "4092:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "4092:40:5"
                },
                {
                  "assignments": [
                    164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 164,
                      "name": "requestId",
                      "nodeType": "VariableDeclaration",
                      "scope": 220,
                      "src": "4140:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4140:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 172,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 168,
                            "name": "_sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "4187:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 169,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "4196:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 166,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 886,
                            "src": "4170:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4170:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4170:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 165,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 893,
                      "src": "4160:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4160:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4140:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 174,
                            "name": "commitments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "4218:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 176,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 175,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "4230:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4218:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4244:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4218:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d75737420757365206120756e69717565204944",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4247:22:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da89408418f1aa3860811d2e64085e2b94d33f2815f2070010f4d0def719e723",
                          "typeString": "literal_string \"Must use a unique ID\""
                        },
                        "value": "Must use a unique ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da89408418f1aa3860811d2e64085e2b94d33f2815f2070010f4d0def719e723",
                          "typeString": "literal_string \"Must use a unique ID\""
                        }
                      ],
                      "id": 173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        902,
                        903
                      ],
                      "referencedDeclaration": 903,
                      "src": "4210:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4210:60:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "4210:60:5"
                },
                {
                  "assignments": [
                    183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 183,
                      "name": "expiration",
                      "nodeType": "VariableDeclaration",
                      "scope": 220,
                      "src": "4326:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 182,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4326:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 188,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "EXPIRY_TIME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "4355:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 184,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 901,
                        "src": "4347:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 883,
                      "src": "4347:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4347:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4326:41:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 189,
                      "name": "exp_time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "4373:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 190,
                      "name": "expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "4384:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4373:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "4373:21:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 193,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "4401:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 195,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 194,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "4413:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4401:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 199,
                              "name": "_payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4469:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 200,
                              "name": "_callbackAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 135,
                              "src": "4487:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 201,
                              "name": "_callbackFunctionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 137,
                              "src": "4513:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 202,
                              "name": "expiration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 183,
                              "src": "4542:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 197,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 886,
                              "src": "4443:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4443:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4443:117:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 196,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 893,
                        "src": "4426:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                          "typeString": "function () pure returns (bytes32)"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4426:140:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4401:165:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "4401:165:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 208,
                        "name": "_specId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "4599:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 209,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "4614:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 210,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "4629:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 211,
                        "name": "_payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "4646:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 212,
                        "name": "_callbackAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "4662:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 213,
                        "name": "_callbackFunctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "4686:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 214,
                        "name": "expiration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "4713:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 215,
                        "name": "_dataVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "4731:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 216,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "4751:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 207,
                      "name": "OracleRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "4578:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$_t_uint256_$_t_address_$_t_bytes4_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,bytes32,uint256,address,bytes4,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4578:179:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "EmitStatement",
                  "src": "4573:184:5"
                }
              ]
            },
            "documentation": "@notice Creates the Chainlink request\n@dev Stores the hash of the params as the on-chain commitment for the request.\nEmits OracleRequest event for the Chainlink node to detect.\n@param _sender The sender of the request\n@param _payment The amount of payment given (specified in wei)\n@param _specId The Job Specification ID\n@param _callbackAddress The callback address for the response\n@param _callbackFunctionId The callback function ID for the response\n@param _nonce The nonce sent by the requester\n@param _dataVersion The specified data version\n@param _data The CBOR payload of the request",
            "id": 220,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 146,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 145,
                  "name": "onlyLINK",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 481,
                  "src": "3968:8:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3968:8:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 148,
                    "name": "_callbackAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 135,
                    "src": "4002:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 149,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 147,
                  "name": "checkCallbackAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 515,
                  "src": "3981:20:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3981:38:5"
              }
            ],
            "name": "oracleRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "3763:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3763:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "name": "_payment",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "3784:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3784:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "name": "_specId",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "3806:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3806:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "name": "_callbackAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "3827:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3827:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "name": "_callbackFunctionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "3857:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3857:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "3889:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3889:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "name": "_dataVersion",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "3909:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3909:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "3935:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3935:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3757:193:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4022:0:5"
            },
            "scope": 530,
            "src": "3735:1027:5",
            "stateMutability": "nonpayable",
            "superFunction": 551,
            "visibility": "external"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
              "src": "5894:828:5",
              "statements": [
                {
                  "assignments": [
                    243
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 243,
                      "name": "paramsHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 291,
                      "src": "5900:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 242,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5900:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 247,
                            "name": "_payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "5964:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 248,
                            "name": "_callbackAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "5982:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 249,
                            "name": "_callbackFunctionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "6008:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 250,
                            "name": "_expiration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 230,
                            "src": "6037:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 245,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 886,
                            "src": "5938:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5938:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5938:118:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 244,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 893,
                      "src": "5921:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5921:141:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5900:162:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 255,
                            "name": "commitments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "6081:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 257,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 256,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "6093:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6081:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 258,
                          "name": "paramsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 243,
                          "src": "6108:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6081:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d7320646f206e6f74206d617463682072657175657374204944",
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6120:32:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e12b50eea9311b443c52ff0775ecb76e354715072acf3c2225436432557396ee",
                          "typeString": "literal_string \"Params do not match request ID\""
                        },
                        "value": "Params do not match request ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e12b50eea9311b443c52ff0775ecb76e354715072acf3c2225436432557396ee",
                          "typeString": "literal_string \"Params do not match request ID\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        902,
                        903
                      ],
                      "referencedDeclaration": 903,
                      "src": "6073:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6073:80:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "6073:80:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 263,
                      "name": "withdrawableTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "6159:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 266,
                          "name": "_payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 224,
                          "src": "6203:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 264,
                          "name": "withdrawableTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "6180:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 883,
                        "src": "6180:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6180:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6159:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "6159:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "6218:30:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 270,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "6225:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 272,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 271,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "6237:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6225:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "6218:30:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 276,
                            "name": "gasleft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "6262:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6262:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 278,
                          "name": "MINIMUM_CONSUMER_GAS_LIMIT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "6275:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6262:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d7573742070726f7669646520636f6e73756d657220656e6f75676820676173",
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6303:34:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e41e236f8c707f430128aec8d4f13fd0193750a557f2c094e8feda34850363f4",
                          "typeString": "literal_string \"Must provide consumer enough gas\""
                        },
                        "value": "Must provide consumer enough gas"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e41e236f8c707f430128aec8d4f13fd0193750a557f2c094e8feda34850363f4",
                          "typeString": "literal_string \"Must provide consumer enough gas\""
                        }
                      ],
                      "id": 275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        902,
                        903
                      ],
                      "referencedDeclaration": 903,
                      "src": "6254:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6254:84:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "6254:84:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 285,
                        "name": "_callbackFunctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "6632:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 286,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "6653:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 287,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "6665:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 283,
                        "name": "_callbackAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "6610:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6610:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
                        "typeString": "function () payable returns (bool)"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6610:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 241,
                  "id": 289,
                  "nodeType": "Return",
                  "src": "6603:68:5"
                }
              ]
            },
            "documentation": "@notice Called by the Chainlink node to fulfill requests\n@dev Given params must hash back to the commitment stored from `oracleRequest`.\nWill call the callback address' callback function without bubbling up error\nchecking in a `require` so that the node can get paid.\n@param _requestId The fulfillment request ID that must match the requester's\n@param _payment The payment amount that will be released for the oracle (specified in wei)\n@param _callbackAddress The callback address to call for fulfillment\n@param _callbackFunctionId The callback function ID to use for fulfillment\n@param _expiration The expiration that the node should respond by before the requester can cancel\n@param _data The data to return to the consuming contract\n@return Status if the external call was successful",
            "id": 291,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 235,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 234,
                  "name": "onlyAuthorizedNode",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 467,
                  "src": "5823:18:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5823:18:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 237,
                    "name": "_requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 222,
                    "src": "5861:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 238,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 236,
                  "name": "isValidRequest",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 450,
                  "src": "5846:14:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5846:26:5"
              }
            ],
            "name": "fulfillOracleRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "5655:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5655:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 224,
                  "name": "_payment",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "5679:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5679:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 226,
                  "name": "_callbackAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "5701:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5701:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 228,
                  "name": "_callbackFunctionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "5731:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5731:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "name": "_expiration",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "5763:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5763:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 232,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "5788:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5788:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5649:156:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "5886:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5886:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5885:6:5"
            },
            "scope": 530,
            "src": "5620:1102:5",
            "stateMutability": "nonpayable",
            "superFunction": 677,
            "visibility": "external"
          },
          {
            "body": {
              "id": 302,
              "nodeType": "Block",
              "src": "6995:40:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 298,
                      "name": "authorizedNodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "7008:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 300,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 299,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "7024:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7008:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 297,
                  "id": 301,
                  "nodeType": "Return",
                  "src": "7001:29:5"
                }
              ]
            },
            "documentation": "@notice Use this to check if a node is authorized for fulfilling requests\n@param _node The address of the Chainlink node\n@return The authorization status of the node",
            "id": 303,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAuthorizationStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "6951:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6951:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6950:15:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 296,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "6989:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6989:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6988:6:5"
            },
            "scope": 530,
            "src": "6919:116:5",
            "stateMutability": "view",
            "superFunction": 684,
            "visibility": "external"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "7369:44:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 312,
                        "name": "authorizedNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "7375:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 314,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 313,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "7391:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7375:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 315,
                      "name": "_allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "7400:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7375:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "7375:33:5"
                }
              ]
            },
            "documentation": "@notice Sets the fulfillment permission for a given node. Use `true` to allow, `false` to disallow.\n@param _node The address of the Chainlink node\n@param _allowed Bool value to determine if the node can fulfill requests",
            "id": 319,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 310,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 309,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 738,
                  "src": "7359:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7359:9:5"
              }
            ],
            "name": "setFulfillmentPermission",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "7320:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7320:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 307,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "7335:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7335:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7319:30:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7369:0:5"
            },
            "scope": 530,
            "src": "7286:127:5",
            "stateMutability": "nonpayable",
            "superFunction": 691,
            "visibility": "external"
          },
          {
            "body": {
              "id": 346,
              "nodeType": "Block",
              "src": "7843:116:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 331,
                      "name": "withdrawableTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "7849:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 334,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 323,
                          "src": "7893:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 332,
                          "name": "withdrawableTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "7870:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 859,
                        "src": "7870:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7870:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7849:52:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "7849:52:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 341,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "7933:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 342,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "7945:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 339,
                            "name": "LinkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "7914:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$658",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 635,
                          "src": "7914:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7914:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 338,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 888,
                      "src": "7907:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7907:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "7907:47:5"
                }
              ]
            },
            "documentation": "@notice Allows the node operator to withdraw earned LINK to a given address\n@dev The owner of the contract can be another wallet and does not have to be a Chainlink node\n@param _recipient The address to send the LINK token to\n@param _amount The amount to send (specified in wei)",
            "id": 347,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 326,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 325,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 738,
                  "src": "7800:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7800:9:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 328,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 323,
                    "src": "7832:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 329,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 327,
                  "name": "hasAvailableFunds",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 435,
                  "src": "7814:17:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7814:26:5"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "7746:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7746:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 323,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "7766:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7766:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7745:37:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7843:0:5"
            },
            "scope": 530,
            "src": "7728:231:5",
            "stateMutability": "nonpayable",
            "superFunction": 698,
            "visibility": "external"
          },
          {
            "body": {
              "id": 359,
              "nodeType": "Block",
              "src": "8267:69:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 356,
                        "name": "ONE_FOR_CONSISTENT_GAS_COST",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "8303:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 354,
                        "name": "withdrawableTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "8280:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 859,
                      "src": "8280:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8280:51:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 353,
                  "id": 358,
                  "nodeType": "Return",
                  "src": "8273:58:5"
                }
              ]
            },
            "documentation": "@notice Displays the amount of LINK that is available for the node operator to withdraw\n@dev We use `ONE_FOR_CONSISTENT_GAS_COST` in place of 0 in storage\n@return The amount of withdrawable LINK on the contract",
            "id": 360,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 350,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 349,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 738,
                  "src": "8239:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8239:9:5"
              }
            ],
            "name": "withdrawable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8222:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 352,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 360,
                  "src": "8258:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8258:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8257:9:5"
            },
            "scope": 530,
            "src": "8201:135:5",
            "stateMutability": "view",
            "superFunction": 703,
            "visibility": "external"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "9042:483:5",
              "statements": [
                {
                  "assignments": [
                    372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 372,
                      "name": "paramsHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 419,
                      "src": "9048:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 371,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9048:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 383,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 376,
                            "name": "_payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "9112:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 377,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "9130:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9130:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 379,
                            "name": "_callbackFunc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "9150:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 380,
                            "name": "_expiration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "9173:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 374,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 886,
                            "src": "9086:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9086:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9086:99:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 373,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 893,
                      "src": "9069:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9069:122:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9048:143:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 385,
                          "name": "paramsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 372,
                          "src": "9205:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 386,
                            "name": "commitments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "9219:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 388,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 387,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "9231:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9219:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "9205:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d7320646f206e6f74206d617463682072657175657374204944",
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9244:32:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e12b50eea9311b443c52ff0775ecb76e354715072acf3c2225436432557396ee",
                          "typeString": "literal_string \"Params do not match request ID\""
                        },
                        "value": "Params do not match request ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e12b50eea9311b443c52ff0775ecb76e354715072acf3c2225436432557396ee",
                          "typeString": "literal_string \"Params do not match request ID\""
                        }
                      ],
                      "id": 384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        902,
                        903
                      ],
                      "referencedDeclaration": 903,
                      "src": "9197:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9197:80:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "9197:80:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 394,
                          "name": "_expiration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 368,
                          "src": "9341:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 395,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 901,
                          "src": "9356:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9341:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52657175657374206973206e6f742065787069726564",
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9361:24:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4469681584edb09f4c5168c152dcbc615ee04be0f2982d1d010c0509f79b076c",
                          "typeString": "literal_string \"Request is not expired\""
                        },
                        "value": "Request is not expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4469681584edb09f4c5168c152dcbc615ee04be0f2982d1d010c0509f79b076c",
                          "typeString": "literal_string \"Request is not expired\""
                        }
                      ],
                      "id": 393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        902,
                        903
                      ],
                      "referencedDeclaration": 903,
                      "src": "9333:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9333:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "9333:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9393:30:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 400,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "9400:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 402,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 401,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "9412:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9400:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "9393:30:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 406,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "9454:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 405,
                      "name": "CancelOracleRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "9434:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9434:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "EmitStatement",
                  "src": "9429:36:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 412,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "9498:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9498:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 414,
                            "name": "_payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "9510:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 410,
                            "name": "LinkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "9479:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$658",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 635,
                          "src": "9479:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9479:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 409,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 888,
                      "src": "9472:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9472:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "9472:48:5"
                }
              ]
            },
            "documentation": "@notice Allows requesters to cancel requests sent to this oracle contract. Will transfer the LINK\nsent for the request back to the requester's address.\n@dev Given params must hash to a commitment stored on the contract in order for the request to be valid\nEmits CancelOracleRequest event.\n@param _requestId The request ID\n@param _payment The amount of payment given (specified in wei)\n@param _callbackFunc The requester's specified callback address\n@param _expiration The time of the expiration for the request",
            "id": 419,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "cancelOracleRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 362,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "8937:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8937:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 364,
                  "name": "_payment",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "8961:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8961:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 366,
                  "name": "_callbackFunc",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "8983:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "8983:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 368,
                  "name": "_expiration",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "9009:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9009:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8931:101:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9042:0:5"
            },
            "scope": 530,
            "src": "8903:622:5",
            "stateMutability": "nonpayable",
            "superFunction": 562,
            "visibility": "external"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "9748:146:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 424,
                          "name": "withdrawableTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "9762:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 427,
                              "name": "ONE_FOR_CONSISTENT_GAS_COST",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "9796:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 425,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "9784:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 883,
                            "src": "9784:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9784:40:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9762:62:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416d6f756e74207265717565737465642069732067726561746572207468616e20776974686472617761626c652062616c616e6365",
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9826:55:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87cfc663fcf6403059a83571137d56c7da4a1aa2a371627fe8ecf960f50e10c2",
                          "typeString": "literal_string \"Amount requested is greater than withdrawable balance\""
                        },
                        "value": "Amount requested is greater than withdrawable balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87cfc663fcf6403059a83571137d56c7da4a1aa2a371627fe8ecf960f50e10c2",
                          "typeString": "literal_string \"Amount requested is greater than withdrawable balance\""
                        }
                      ],
                      "id": 423,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        902,
                        903
                      ],
                      "referencedDeclaration": 903,
                      "src": "9754:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9754:128:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "9754:128:5"
                },
                {
                  "id": 433,
                  "nodeType": "PlaceholderStatement",
                  "src": "9888:1:5"
                }
              ]
            },
            "documentation": "@dev Reverts if amount requested is greater than withdrawable balance\n@param _amount The given amount to compare to `withdrawableTokens`",
            "id": 435,
            "name": "hasAvailableFunds",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "9731:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9731:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9730:17:5"
            },
            "src": "9704:190:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "10078:86:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 440,
                            "name": "commitments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "10092:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 442,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 441,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "10104:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10092:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10119:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10092:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206861766520612076616c696420726571756573744964",
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10122:29:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193",
                          "typeString": "literal_string \"Must have a valid requestId\""
                        },
                        "value": "Must have a valid requestId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193",
                          "typeString": "literal_string \"Must have a valid requestId\""
                        }
                      ],
                      "id": 439,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        902,
                        903
                      ],
                      "referencedDeclaration": 903,
                      "src": "10084:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10084:68:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "10084:68:5"
                },
                {
                  "id": 448,
                  "nodeType": "PlaceholderStatement",
                  "src": "10158:1:5"
                }
              ]
            },
            "documentation": "@dev Reverts if request ID does not exist\n@param _requestId The given request ID to check in stored `commitments`",
            "id": 450,
            "name": "isValidRequest",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 437,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "10058:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10058:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10057:20:5"
            },
            "src": "10034:130:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 466,
              "nodeType": "Block",
              "src": "10282:123:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 453,
                            "name": "authorizedNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "10296:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 456,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 454,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "10312:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10312:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10296:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 457,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "10327:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10327:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 459,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "10341:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10327:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10296:50:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420616e20617574686f72697a6564206e6f646520746f2066756c66696c6c207265717565737473",
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10348:44:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_925999ab7f59e53d75c57dd1272073b0ac720fd79679a14e43fcd1866a053ed4",
                          "typeString": "literal_string \"Not an authorized node to fulfill requests\""
                        },
                        "value": "Not an authorized node to fulfill requests"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_925999ab7f59e53d75c57dd1272073b0ac720fd79679a14e43fcd1866a053ed4",
                          "typeString": "literal_string \"Not an authorized node to fulfill requests\""
                        }
                      ],
                      "id": 452,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        902,
                        903
                      ],
                      "referencedDeclaration": 903,
                      "src": "10288:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10288:105:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "10288:105:5"
                },
                {
                  "id": 465,
                  "nodeType": "PlaceholderStatement",
                  "src": "10399:1:5"
                }
              ]
            },
            "documentation": "@dev Reverts if `msg.sender` is not authorized to fulfill requests",
            "id": 467,
            "name": "onlyAuthorizedNode",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10279:2:5"
            },
            "src": "10252:153:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "10491:82:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 470,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "10505:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10505:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 473,
                              "name": "LinkToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "10527:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$658",
                                "typeString": "contract LinkTokenInterface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$658",
                                "typeString": "contract LinkTokenInterface"
                              }
                            ],
                            "id": 472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10519:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10519:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10505:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d75737420757365204c494e4b20746f6b656e",
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10539:21:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e987a5305d985c4322166f34f5dcca15d7dfa4faebb15d40e05678e672e6a6a7",
                          "typeString": "literal_string \"Must use LINK token\""
                        },
                        "value": "Must use LINK token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e987a5305d985c4322166f34f5dcca15d7dfa4faebb15d40e05678e672e6a6a7",
                          "typeString": "literal_string \"Must use LINK token\""
                        }
                      ],
                      "id": 469,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        902,
                        903
                      ],
                      "referencedDeclaration": 903,
                      "src": "10497:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10497:64:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 478,
                  "nodeType": "ExpressionStatement",
                  "src": "10497:64:5"
                },
                {
                  "id": 479,
                  "nodeType": "PlaceholderStatement",
                  "src": "10567:1:5"
                }
              ]
            },
            "documentation": "@dev Reverts if not sent from the LINK token",
            "id": 481,
            "name": "onlyLINK",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10488:2:5"
            },
            "src": "10471:102:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 499,
              "nodeType": "Block",
              "src": "10781:237:5",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 486,
                      "name": "funcSelector",
                      "nodeType": "VariableDeclaration",
                      "scope": 500,
                      "src": "10787:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 485,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "10787:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 487,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10787:19:5"
                },
                {
                  "externalReferences": [
                    {
                      "funcSelector": {
                        "declaration": 486,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "10872:12:5",
                        "valueSize": 1
                      }
                    },
                    {
                      "_data": {
                        "declaration": 483,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "10898:5:5",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 488,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    funcSelector := mload(add(_data, 32))\n}",
                  "src": "10812:115:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 490,
                          "name": "funcSelector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 486,
                          "src": "10928:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 491,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 922,
                              "src": "10944:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Oracle_$530",
                                "typeString": "contract Oracle"
                              }
                            },
                            "id": 492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oracleRequest",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 220,
                            "src": "10944:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_address_$_t_bytes4_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,bytes32,address,bytes4,uint256,uint256,bytes memory) external"
                            }
                          },
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10944:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "10928:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374207573652077686974656c69737465642066756e6374696f6e73",
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10973:32:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea6b7afc4c52689b1bdf6c0bb1c433e7bdb388c0dab1bc9cdb008bc64d354213",
                          "typeString": "literal_string \"Must use whitelisted functions\""
                        },
                        "value": "Must use whitelisted functions"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea6b7afc4c52689b1bdf6c0bb1c433e7bdb388c0dab1bc9cdb008bc64d354213",
                          "typeString": "literal_string \"Must use whitelisted functions\""
                        }
                      ],
                      "id": 489,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        902,
                        903
                      ],
                      "referencedDeclaration": 903,
                      "src": "10920:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10920:86:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "10920:86:5"
                },
                {
                  "id": 498,
                  "nodeType": "PlaceholderStatement",
                  "src": "11012:1:5"
                }
              ]
            },
            "documentation": "@dev Reverts if the given data does not begin with the `oracleRequest` function selector\n@param _data The data payload of the request",
            "id": 500,
            "name": "permittedFunctionsForLINK",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 483,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "10768:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 482,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10768:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10767:13:5"
            },
            "src": "10733:285:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 514,
              "nodeType": "Block",
              "src": "11174:79:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 505,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 502,
                          "src": "11188:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 507,
                              "name": "LinkToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "11203:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$658",
                                "typeString": "contract LinkTokenInterface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$658",
                                "typeString": "contract LinkTokenInterface"
                              }
                            ],
                            "id": 506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11195:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11195:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11188:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f742063616c6c6261636b20746f204c494e4b",
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11215:25:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c91bf1db15c019a879a37eef54af733a5f0801faedda1a37e217ea60f3cdcf4",
                          "typeString": "literal_string \"Cannot callback to LINK\""
                        },
                        "value": "Cannot callback to LINK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c91bf1db15c019a879a37eef54af733a5f0801faedda1a37e217ea60f3cdcf4",
                          "typeString": "literal_string \"Cannot callback to LINK\""
                        }
                      ],
                      "id": 504,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        902,
                        903
                      ],
                      "referencedDeclaration": 903,
                      "src": "11180:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11180:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "11180:61:5"
                },
                {
                  "id": 513,
                  "nodeType": "PlaceholderStatement",
                  "src": "11247:1:5"
                }
              ]
            },
            "documentation": "@dev Reverts if the callback address is the LINK token\n@param _to The callback address",
            "id": 515,
            "name": "checkCallbackAddress",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 502,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "11161:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11161:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11160:13:5"
            },
            "src": "11131:122:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 528,
              "nodeType": "Block",
              "src": "11427:91:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 520,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 517,
                            "src": "11441:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11441:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 522,
                          "name": "MINIMUM_REQUEST_LENGTH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "11457:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11441:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642072657175657374206c656e677468",
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11481:24:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4351bc985996f87af6fcc2b4d60724aa114f26202c1c2c242f661ab3e57c8216",
                          "typeString": "literal_string \"Invalid request length\""
                        },
                        "value": "Invalid request length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4351bc985996f87af6fcc2b4d60724aa114f26202c1c2c242f661ab3e57c8216",
                          "typeString": "literal_string \"Invalid request length\""
                        }
                      ],
                      "id": 519,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        902,
                        903
                      ],
                      "referencedDeclaration": 903,
                      "src": "11433:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11433:73:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 526,
                  "nodeType": "ExpressionStatement",
                  "src": "11433:73:5"
                },
                {
                  "id": 527,
                  "nodeType": "PlaceholderStatement",
                  "src": "11512:1:5"
                }
              ]
            },
            "documentation": "@dev Reverts if the given payload is less than needed to create a request\n@param _data The request payload",
            "id": 529,
            "name": "validRequestLength",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 517,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "11414:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11414:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11413:13:5"
            },
            "src": "11386:132:5",
            "visibility": "internal"
          }
        ],
        "scope": 531,
        "src": "563:10958:5"
      }
    ],
    "src": "0:11522:5"
  },
  "bytecode": "60806040526000600155600160075534801561001a57600080fd5b50604051602080611355833981016040525160008054600160a060020a0319908116331790915560048054600160a060020a03909316929091169190911790556112ec806100696000396000f3006080604052600436106100d65763ffffffff60e060020a600035041662df475e81146100db5780632db7f1f41461010c578063404299461461013357806342f6487a146101865780634ab0d1901461019b5780634b602282146101e957806350188301146101fe5780636ee4d55314610213578063715018a61461023e5780637fcd56db14610253578063839df945146102795780638da5cb5b146102915780639c1b2839146102a6578063a4c0ed36146102d8578063d3e9c31414610341578063f2fde38b14610362578063f3fef3a314610383575b600080fd5b3480156100e757600080fd5b506100f06103a7565b60408051600160a060020a039092168252519081900360200190f35b34801561011857600080fd5b506101216103b6565b60408051918252519081900360200190f35b34801561013f57600080fd5b50610184600160a060020a03600480358216916024803592604435926064351691600160e060020a0319608435169160a4359160c4359160e4359182019101356103bc565b005b34801561019257600080fd5b506101216107dd565b3480156101a757600080fd5b506101d5600435602435600160a060020a0360443516600160e060020a03196064351660843560a4356107e3565b604080519115158252519081900360200190f35b3480156101f557600080fd5b50610121610add565b34801561020a57600080fd5b50610121610ae3565b34801561021f57600080fd5b50610184600435602435600160e060020a031960443516606435610b14565b34801561024a57600080fd5b50610184610d5b565b34801561025f57600080fd5b50610184600160a060020a03600435166024351515610dc7565b34801561028557600080fd5b50610121600435610e09565b34801561029d57600080fd5b506100f0610e1b565b3480156102b257600080fd5b506102bb610e2a565b60408051600160e060020a03199092168252519081900360200190f35b3480156102e457600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610184948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610e4e9650505050505050565b34801561034d57600080fd5b506101d5600160a060020a0360043516611073565b34801561036e57600080fd5b50610184600160a060020a0360043516611091565b34801561038f57600080fd5b50610184600160a060020a03600435166024356110b4565b600254600160a060020a031681565b60035481565b6004546000908190600160a060020a03163314610423576040805160e560020a62461bcd02815260206004820152601360248201527f4d75737420757365204c494e4b20746f6b656e00000000000000000000000000604482015290519081900360640190fd5b6004548890600160a060020a038083169116141561048b576040805160e560020a62461bcd02815260206004820152601760248201527f43616e6e6f742063616c6c6261636b20746f204c494e4b000000000000000000604482015290519081900360640190fd5b60018b90556002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038b81169190911777ffffffff000000000000000000000000000000000000000019167401000000000000000000000000000000000000000060e060020a8c04021790915560408051918e166c010000000000000000000000000260208084019190915260348084018b905282518085039091018152605490930191829052825182918401908083835b6020831061055b5780518252601f19909201916020918201910161053c565b51815160209384036101000a600019018019909216911617905260408051929094018290039091206000818152600590925292902054919650501591506105ee9050576040805160e560020a62461bcd02815260206004820152601460248201527f4d75737420757365206120756e69717565204944000000000000000000000000604482015290519081900360640190fd5b6106004261012c63ffffffff61121e16565b60038190556040805160208082018f90526c01000000000000000000000000600160a060020a038e160282840152600160e060020a03198c1660548301526058808301859052835180840390910181526078909201928390528151939550909282918401908083835b602083106106885780518252601f199092019160209182019101610669565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600560008560001916600019168152602001908152602001600020816000191690555089600019167fd8d7ecc4800d25fa53ce0372f13a416d98907a7ef3d8d3bdd79cf4fe75529c658d858e8d8d888d8d8d604051808a600160a060020a0316600160a060020a03168152602001896000191660001916815260200188815260200187600160a060020a0316600160a060020a03168152602001867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200185815260200184815260200180602001828103825284848281815260200192508082843760405192018290039c50909a5050505050505050505050a2505050505050505050505050565b60015481565b33600090815260066020526040812054819060ff168061080d5750600054600160a060020a031633145b1515610889576040805160e560020a62461bcd02815260206004820152602a60248201527f4e6f7420616e20617574686f72697a6564206e6f646520746f2066756c66696c60448201527f6c20726571756573747300000000000000000000000000000000000000000000606482015290519081900360840190fd5b600088815260056020526040902054889015156108f0576040805160e560020a62461bcd02815260206004820152601b60248201527f4d757374206861766520612076616c6964207265717565737449640000000000604482015290519081900360640190fd5b6040805160208082018b90526c01000000000000000000000000600160a060020a038b160282840152600160e060020a031989166054830152605880830189905283518084039091018152607890920192839052815191929182918401908083835b602083106109715780518252601f199092019160209182019101610952565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060008f81526005909252929020549195505084149150610a059050576040805160e560020a62461bcd02815260206004820152601e60248201527f506172616d7320646f206e6f74206d6174636820726571756573742049440000604482015290519081900360640190fd5b600754610a18908963ffffffff61121e16565b60075560008981526005602052604081205562061a805a1015610a85576040805160e560020a62461bcd02815260206004820181905260248201527f4d7573742070726f7669646520636f6e73756d657220656e6f75676820676173604482015290519081900360640190fd5b6040805163ffffffff60e060020a808a04918216028252600482018c9052602482018790529151600160a060020a038a169291604480820192600092909190829003018183875af19c9b505050505050505050505050565b61012c81565b60008054600160a060020a03163314610afb57600080fd5b600754610b0f90600163ffffffff61123116565b905090565b6040805160208082018690526c01000000000000000000000000330282840152600160e060020a0319851660548301526058808301859052835180840390910181526078909201928390528151600093918291908401908083835b60208310610b8e5780518252601f199092019160209182019101610b6f565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060008b81526005909252929020549194505083149150610c229050576040805160e560020a62461bcd02815260206004820152601e60248201527f506172616d7320646f206e6f74206d6174636820726571756573742049440000604482015290519081900360640190fd5b42821115610c7a576040805160e560020a62461bcd02815260206004820152601660248201527f52657175657374206973206e6f74206578706972656400000000000000000000604482015290519081900360640190fd5b6000858152600560205260408082208290555186917fa7842b9ec549398102c0d91b1b9919b2f20558aefdadf57528a95c6cd3292e9391a260048054604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815233938101939093526024830187905251600160a060020a039091169163a9059cbb9160448083019260209291908290030181600087803b158015610d2057600080fd5b505af1158015610d34573d6000803e3d6000fd5b505050506040513d6020811015610d4a57600080fd5b50511515610d5457fe5b5050505050565b600054600160a060020a03163314610d7257600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a03163314610dde57600080fd5b600160a060020a03919091166000908152600660205260409020805460ff1916911515919091179055565b60056020526000908152604090205481565b600054600160a060020a031681565b60025474010000000000000000000000000000000000000000900460e060020a0281565b600454600160a060020a03163314610eb0576040805160e560020a62461bcd02815260206004820152601360248201527f4d75737420757365204c494e4b20746f6b656e00000000000000000000000000604482015290519081900360640190fd5b8051819060441115610f0c576040805160e560020a62461bcd02815260206004820152601660248201527f496e76616c69642072657175657374206c656e67746800000000000000000000604482015290519081900360640190fd5b60208201518290600160e060020a031981167f404299460000000000000000000000000000000000000000000000000000000014610f94576040805160e560020a62461bcd02815260206004820152601e60248201527f4d757374207573652077686974656c69737465642066756e6374696f6e730000604482015290519081900360640190fd5b85602485015284604485015230600160a060020a03168460405180828051906020019080838360005b83811015610fd5578181015183820152602001610fbd565b50505050905090810190601f1680156110025780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af4915050151561106b576040805160e560020a62461bcd02815260206004820152601860248201527f556e61626c6520746f2063726561746520726571756573740000000000000000604482015290519081900360640190fd5b505050505050565b600160a060020a031660009081526006602052604090205460ff1690565b600054600160a060020a031633146110a857600080fd5b6110b181611243565b50565b600054600160a060020a031633146110cb57600080fd5b806110dd81600163ffffffff61121e16565b600754101561115c576040805160e560020a62461bcd02815260206004820152603560248201527f416d6f756e74207265717565737465642069732067726561746572207468616e60448201527f20776974686472617761626c652062616c616e63650000000000000000000000606482015290519081900360840190fd5b60075461116f908363ffffffff61123116565b60075560048054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0387811694820194909452602481018690529051929091169163a9059cbb916044808201926020929091908290030181600087803b1580156111e557600080fd5b505af11580156111f9573d6000803e3d6000fd5b505050506040513d602081101561120f57600080fd5b5051151561121957fe5b505050565b8181018281101561122b57fe5b92915050565b60008282111561123d57fe5b50900390565b600160a060020a038116151561125857600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820c501d06d3a4f9f0225ee0a6c256588b7b141bf56805129089c7843f9e672f47a0029",
  "bytecodeSha1": "2a6329c8a29818387a719177b33d124ee34a6d02",
  "compiler": {
    "evm_version": "byzantium",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.4.24+commit.e67f0147"
  },
  "contractName": "Oracle",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {},
      "3": {
        "Ownable._transferOwnership": {
          "43": [
            1582,
            1605,
            true
          ]
        }
      },
      "4": {},
      "5": {
        "Oracle.cancelOracleRequest": {
          "39": [
            9205,
            9242,
            true
          ],
          "40": [
            9341,
            9359,
            true
          ]
        },
        "Oracle.fulfillOracleRequest": {
          "35": [
            10296,
            10323,
            true
          ],
          "36": [
            10092,
            10120,
            true
          ],
          "37": [
            6081,
            6118,
            true
          ],
          "38": [
            6262,
            6301,
            true
          ]
        },
        "Oracle.onTokenTransfer": {
          "41": [
            2984,
            3017,
            true
          ]
        },
        "Oracle.oracleRequest": {
          "33": [
            11188,
            11213,
            true
          ],
          "34": [
            4218,
            4245,
            true
          ]
        },
        "Oracle.withdraw": {
          "42": [
            9762,
            9824,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {},
      "3": {
        "Ownable._transferOwnership": {
          "30": [
            1574,
            1606
          ],
          "31": [
            1612,
            1655
          ],
          "32": [
            1661,
            1678
          ]
        },
        "Ownable.renounceOwnership": {
          "18": [
            1053,
            1083
          ],
          "19": [
            1089,
            1107
          ]
        },
        "Ownable.transferOwnership": {
          "23": [
            1343,
            1372
          ]
        }
      },
      "4": {
        "SafeMath.add": {
          "26": [
            1315,
            1326
          ],
          "27": [
            1332,
            1347
          ]
        },
        "SafeMath.sub": {
          "28": [
            1135,
            1151
          ],
          "29": [
            1157,
            1171
          ]
        }
      },
      "5": {
        "Oracle.cancelOracleRequest": {
          "13": [
            9197,
            9277
          ],
          "14": [
            9333,
            9386
          ],
          "15": [
            9393,
            9423
          ],
          "16": [
            9429,
            9465
          ],
          "17": [
            9472,
            9520
          ]
        },
        "Oracle.fulfillOracleRequest": {
          "7": [
            6073,
            6153
          ],
          "8": [
            6159,
            6212
          ],
          "9": [
            6218,
            6248
          ],
          "10": [
            6254,
            6338
          ],
          "11": [
            6603,
            6671
          ]
        },
        "Oracle.getAuthorizationStatus": {
          "22": [
            7001,
            7030
          ]
        },
        "Oracle.onTokenTransfer": {
          "21": [
            2976,
            3046
          ]
        },
        "Oracle.oracleRequest": {
          "0": [
            4028,
            4046
          ],
          "1": [
            4052,
            4086
          ],
          "2": [
            4092,
            4132
          ],
          "3": [
            4210,
            4270
          ],
          "4": [
            4373,
            4394
          ],
          "5": [
            4401,
            4566
          ],
          "6": [
            4573,
            4757
          ]
        },
        "Oracle.setFulfillmentPermission": {
          "20": [
            7375,
            7408
          ]
        },
        "Oracle.withdraw": {
          "24": [
            7849,
            7901
          ],
          "25": [
            7907,
            7954
          ]
        },
        "Oracle.withdrawable": {
          "12": [
            8273,
            8331
          ]
        }
      }
    }
  },
  "dependencies": [
    "alphachainio/chainlink-contracts@1.1.2/ChainlinkRequestInterface",
    "alphachainio/chainlink-contracts@1.1.2/LinkTokenInterface",
    "alphachainio/chainlink-contracts@1.1.2/OracleInterface",
    "alphachainio/chainlink-contracts@1.1.2/Ownable",
    "alphachainio/chainlink-contracts@1.1.2/SafeMath"
  ],
  "deployedBytecode": "6080604052600436106100d65763ffffffff60e060020a600035041662df475e81146100db5780632db7f1f41461010c578063404299461461013357806342f6487a146101865780634ab0d1901461019b5780634b602282146101e957806350188301146101fe5780636ee4d55314610213578063715018a61461023e5780637fcd56db14610253578063839df945146102795780638da5cb5b146102915780639c1b2839146102a6578063a4c0ed36146102d8578063d3e9c31414610341578063f2fde38b14610362578063f3fef3a314610383575b600080fd5b3480156100e757600080fd5b506100f06103a7565b60408051600160a060020a039092168252519081900360200190f35b34801561011857600080fd5b506101216103b6565b60408051918252519081900360200190f35b34801561013f57600080fd5b50610184600160a060020a03600480358216916024803592604435926064351691600160e060020a0319608435169160a4359160c4359160e4359182019101356103bc565b005b34801561019257600080fd5b506101216107dd565b3480156101a757600080fd5b506101d5600435602435600160a060020a0360443516600160e060020a03196064351660843560a4356107e3565b604080519115158252519081900360200190f35b3480156101f557600080fd5b50610121610add565b34801561020a57600080fd5b50610121610ae3565b34801561021f57600080fd5b50610184600435602435600160e060020a031960443516606435610b14565b34801561024a57600080fd5b50610184610d5b565b34801561025f57600080fd5b50610184600160a060020a03600435166024351515610dc7565b34801561028557600080fd5b50610121600435610e09565b34801561029d57600080fd5b506100f0610e1b565b3480156102b257600080fd5b506102bb610e2a565b60408051600160e060020a03199092168252519081900360200190f35b3480156102e457600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610184948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610e4e9650505050505050565b34801561034d57600080fd5b506101d5600160a060020a0360043516611073565b34801561036e57600080fd5b50610184600160a060020a0360043516611091565b34801561038f57600080fd5b50610184600160a060020a03600435166024356110b4565b600254600160a060020a031681565b60035481565b6004546000908190600160a060020a03163314610423576040805160e560020a62461bcd02815260206004820152601360248201527f4d75737420757365204c494e4b20746f6b656e00000000000000000000000000604482015290519081900360640190fd5b6004548890600160a060020a038083169116141561048b576040805160e560020a62461bcd02815260206004820152601760248201527f43616e6e6f742063616c6c6261636b20746f204c494e4b000000000000000000604482015290519081900360640190fd5b60018b90556002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038b81169190911777ffffffff000000000000000000000000000000000000000019167401000000000000000000000000000000000000000060e060020a8c04021790915560408051918e166c010000000000000000000000000260208084019190915260348084018b905282518085039091018152605490930191829052825182918401908083835b6020831061055b5780518252601f19909201916020918201910161053c565b51815160209384036101000a600019018019909216911617905260408051929094018290039091206000818152600590925292902054919650501591506105ee9050576040805160e560020a62461bcd02815260206004820152601460248201527f4d75737420757365206120756e69717565204944000000000000000000000000604482015290519081900360640190fd5b6106004261012c63ffffffff61121e16565b60038190556040805160208082018f90526c01000000000000000000000000600160a060020a038e160282840152600160e060020a03198c1660548301526058808301859052835180840390910181526078909201928390528151939550909282918401908083835b602083106106885780518252601f199092019160209182019101610669565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600560008560001916600019168152602001908152602001600020816000191690555089600019167fd8d7ecc4800d25fa53ce0372f13a416d98907a7ef3d8d3bdd79cf4fe75529c658d858e8d8d888d8d8d604051808a600160a060020a0316600160a060020a03168152602001896000191660001916815260200188815260200187600160a060020a0316600160a060020a03168152602001867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200185815260200184815260200180602001828103825284848281815260200192508082843760405192018290039c50909a5050505050505050505050a2505050505050505050505050565b60015481565b33600090815260066020526040812054819060ff168061080d5750600054600160a060020a031633145b1515610889576040805160e560020a62461bcd02815260206004820152602a60248201527f4e6f7420616e20617574686f72697a6564206e6f646520746f2066756c66696c60448201527f6c20726571756573747300000000000000000000000000000000000000000000606482015290519081900360840190fd5b600088815260056020526040902054889015156108f0576040805160e560020a62461bcd02815260206004820152601b60248201527f4d757374206861766520612076616c6964207265717565737449640000000000604482015290519081900360640190fd5b6040805160208082018b90526c01000000000000000000000000600160a060020a038b160282840152600160e060020a031989166054830152605880830189905283518084039091018152607890920192839052815191929182918401908083835b602083106109715780518252601f199092019160209182019101610952565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060008f81526005909252929020549195505084149150610a059050576040805160e560020a62461bcd02815260206004820152601e60248201527f506172616d7320646f206e6f74206d6174636820726571756573742049440000604482015290519081900360640190fd5b600754610a18908963ffffffff61121e16565b60075560008981526005602052604081205562061a805a1015610a85576040805160e560020a62461bcd02815260206004820181905260248201527f4d7573742070726f7669646520636f6e73756d657220656e6f75676820676173604482015290519081900360640190fd5b6040805163ffffffff60e060020a808a04918216028252600482018c9052602482018790529151600160a060020a038a169291604480820192600092909190829003018183875af19c9b505050505050505050505050565b61012c81565b60008054600160a060020a03163314610afb57600080fd5b600754610b0f90600163ffffffff61123116565b905090565b6040805160208082018690526c01000000000000000000000000330282840152600160e060020a0319851660548301526058808301859052835180840390910181526078909201928390528151600093918291908401908083835b60208310610b8e5780518252601f199092019160209182019101610b6f565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060008b81526005909252929020549194505083149150610c229050576040805160e560020a62461bcd02815260206004820152601e60248201527f506172616d7320646f206e6f74206d6174636820726571756573742049440000604482015290519081900360640190fd5b42821115610c7a576040805160e560020a62461bcd02815260206004820152601660248201527f52657175657374206973206e6f74206578706972656400000000000000000000604482015290519081900360640190fd5b6000858152600560205260408082208290555186917fa7842b9ec549398102c0d91b1b9919b2f20558aefdadf57528a95c6cd3292e9391a260048054604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815233938101939093526024830187905251600160a060020a039091169163a9059cbb9160448083019260209291908290030181600087803b158015610d2057600080fd5b505af1158015610d34573d6000803e3d6000fd5b505050506040513d6020811015610d4a57600080fd5b50511515610d5457fe5b5050505050565b600054600160a060020a03163314610d7257600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a03163314610dde57600080fd5b600160a060020a03919091166000908152600660205260409020805460ff1916911515919091179055565b60056020526000908152604090205481565b600054600160a060020a031681565b60025474010000000000000000000000000000000000000000900460e060020a0281565b600454600160a060020a03163314610eb0576040805160e560020a62461bcd02815260206004820152601360248201527f4d75737420757365204c494e4b20746f6b656e00000000000000000000000000604482015290519081900360640190fd5b8051819060441115610f0c576040805160e560020a62461bcd02815260206004820152601660248201527f496e76616c69642072657175657374206c656e67746800000000000000000000604482015290519081900360640190fd5b60208201518290600160e060020a031981167f404299460000000000000000000000000000000000000000000000000000000014610f94576040805160e560020a62461bcd02815260206004820152601e60248201527f4d757374207573652077686974656c69737465642066756e6374696f6e730000604482015290519081900360640190fd5b85602485015284604485015230600160a060020a03168460405180828051906020019080838360005b83811015610fd5578181015183820152602001610fbd565b50505050905090810190601f1680156110025780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af4915050151561106b576040805160e560020a62461bcd02815260206004820152601860248201527f556e61626c6520746f2063726561746520726571756573740000000000000000604482015290519081900360640190fd5b505050505050565b600160a060020a031660009081526006602052604090205460ff1690565b600054600160a060020a031633146110a857600080fd5b6110b181611243565b50565b600054600160a060020a031633146110cb57600080fd5b806110dd81600163ffffffff61121e16565b600754101561115c576040805160e560020a62461bcd02815260206004820152603560248201527f416d6f756e74207265717565737465642069732067726561746572207468616e60448201527f20776974686472617761626c652062616c616e63650000000000000000000000606482015290519081900360840190fd5b60075461116f908363ffffffff61123116565b60075560048054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0387811694820194909452602481018690529051929091169163a9059cbb916044808201926020929091908290030181600087803b1580156111e557600080fd5b505af11580156111f9573d6000803e3d6000fd5b505050506040513d602081101561120f57600080fd5b5051151561121957fe5b505050565b8181018281101561122b57fe5b92915050565b60008282111561123d57fe5b50900390565b600160a060020a038116151561125857600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820c501d06d3a4f9f0225ee0a6c256588b7b141bf56805129089c7843f9e672f47a0029",
  "deployedSourceMap": "563:10958:5:-;;;;;;;;;-1:-1:-1;;;563:10958:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;699:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;699:30:5;;;;;;;;-1:-1:-1;;;;;699:30:5;;;;;;;;;;;;;;769:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:23:5;;;;;;;;;;;;;;;;;;;;3735:1027;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3735:1027:5;-1:-1:-1;;;;;3735:1027:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3735:1027:5;;;;;;;;;;;;;;;;;;;;;;669:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;669:26:5;;;;5620:1102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5620:1102:5;;;;;-1:-1:-1;;;;;5620:1102:5;;;-1:-1:-1;;;;;;5620:1102:5;;;;;;;;;;;;;;;;;;;;;;;;;;;797:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;797:47:5;;;;8201:135;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8201:135:5;;;;8903:622;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8903:622:5;;;;;-1:-1:-1;;;;;;8903:622:5;;;;;;;1001:111:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:3;;;;7286:127:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7286:127:5;-1:-1:-1;;;;;7286:127:5;;;;;;;;;1320:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1320:46:5;;;;;238:20:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:3;;;;733:32:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;733:32:5;;;;;;;;-1:-1:-1;;;;;;733:32:5;;;;;;;;;;;;;;2524:550;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2524:550:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2524:550:5;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2524:550:5;;-1:-1:-1;2524:550:5;;-1:-1:-1;;;;;;;2524:550:5;6919:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6919:116:5;-1:-1:-1;;;;;6919:116:5;;;;;1274:103:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:3;-1:-1:-1;;;;;1274:103:3;;;;;7728:231:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7728:231:5;-1:-1:-1;;;;;7728:231:5;;;;;;;699:30;;;-1:-1:-1;;;;;699:30:5;;:::o;769:23::-;;;;:::o;3735:1027::-;10527:9;;4140:17;;;;-1:-1:-1;;;;;10527:9:5;10505:10;:32;10497:64;;;;;-1:-1:-1;;;;;10497:64:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;11203:9;;4002:16;;-1:-1:-1;;;;;11188:25:5;;;11203:9;;11188:25;;11180:61;;;;;-1:-1:-1;;;;;11180:61:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;4028:7;:18;;;4052:15;:34;;-1:-1:-1;;4052:34:5;-1:-1:-1;;;;;4052:34:5;;;;;;;-1:-1:-1;;4092:40:5;;-1:-1:-1;;;4092:40:5;;;;;;;4170:33;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;4170:33:5;;;;;;;;4160:44;;4170:33;;4160:44;;;;4170:33;4160:44;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;4160:44:5;;;;;;;;;;;;;-1:-1:-1;4218:22:5;;;:11;:22;;;;;;;4160:44;;-1:-1:-1;;4218:27:5;;-1:-1:-1;4210:60:5;;-1:-1:-1;4210:60:5;;;;-1:-1:-1;;;;;4210:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;4347:20;:3;835:9;4347:20;:7;:20;:::i;:::-;4373:8;:21;;;4443:117;;;;;;;;;;;-1:-1:-1;;;;;4443:117:5;;;;;;;-1:-1:-1;;;;;;4443:117:5;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;4443:117:5;;;;;;;;4426:140;;4326:41;;-1:-1:-1;4443:117:5;;;;4426:140;;;;4443:117;4426:140;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4426:140:5;;;;;;;;;;;;;;;;4401:11;:22;4413:9;4401:22;;;;;;;;;;;;;;;;;:165;;;;;;;4599:7;4578:179;;;;4614:7;4629:9;4646:8;4662:16;4686:19;4713:10;4731:12;4751:5;;4578:179;;;;-1:-1:-1;;;;;4578:179:5;-1:-1:-1;;;;;4578:179:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4578:179:5;-1:-1:-1;;;;;4578:179:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4578:179:5;;-1:-1:-1;;;;;;;;;;;4578:179:5;10567:1;3735:1027;;;;;;;;;;;:::o;669:26::-;;;;:::o;5620:1102::-;10312:10;5886:4;10296:27;;;:15;:27;;;;;;5886:4;;10296:27;;;:50;;-1:-1:-1;10341:5:5;;-1:-1:-1;;;;;10341:5:5;10327:10;:19;10296:50;10288:105;;;;;;;-1:-1:-1;;;;;10288:105:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10092:23;;;;:11;:23;;;;;;5861:10;;10092:28;;10084:68;;;;;-1:-1:-1;;;;;10084:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;5938:118;;;;;;;;;;;-1:-1:-1;;;;;5938:118:5;;;;;;;-1:-1:-1;;;;;;5938:118:5;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;5938:118:5;;;;;;;;5921:141;;5938:118;;;;;5921:141;;;;5938:118;5921:141;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;5921:141:5;;;;;;;;;;;;;-1:-1:-1;6081:23:5;;;:11;:23;;;;;;;5921:141;;-1:-1:-1;;6081:37:5;;;-1:-1:-1;6073:80:5;;-1:-1:-1;6073:80:5;;;;-1:-1:-1;;;;;6073:80:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;6180:18;;:32;;6203:8;6180:32;:22;:32;:::i;:::-;6159:18;:53;6225:23;;;;:11;:23;;;;;6218:30;902:6;6262:9;:39;;6254:84;;;;;-1:-1:-1;;;;;6254:84:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6610:61;;;;-1:-1:-1;;;6610:61:5;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6610:21:5;;;:61;;;;;;;;;;;;;;;;;:21;:61;;;5620:1102;-1:-1:-1;;;;;;;;;;;;5620:1102:5:o;797:47::-;835:9;797:47;:::o;8201:135::-;8258:7;719:5:3;;-1:-1:-1;;;;;719:5:3;705:10;:19;697:28;;;;;;8280:18:5;;:51;;1069:1;8280:51;:22;:51;:::i;:::-;8273:58;;8201:135;:::o;8903:622::-;9086:99;;;;;;;;;;;9130:10;9086:99;;;;;-1:-1:-1;;;;;;9086:99:5;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;9086:99:5;;;;;;;;9069:122;;9048:18;;9086:99;;;9069:122;;;;;9086:99;9069:122;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;9069:122:5;;;;;;;;;;;;;-1:-1:-1;9219:23:5;;;:11;:23;;;;;;;9069:122;;-1:-1:-1;;9205:37:5;;;-1:-1:-1;9197:80:5;;-1:-1:-1;9197:80:5;;;;-1:-1:-1;;;;;9197:80:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;9356:3;9341:18;;;9333:53;;;;;-1:-1:-1;;;;;9333:53:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;9400:23;;;;:11;:23;;;;;;9393:30;;;9434:31;9412:10;;9434:31;;;9479:9;;;:40;;;;;;9498:10;9479:40;;;;;;;;;;;;;;-1:-1:-1;;;;;9479:9:5;;;;:18;;:40;;;;;;;;;;;;;;:9;;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;9479:40:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9479:40:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9479:40:5;9472:48;;;;;;8903:622;;;;;:::o;1001:111:3:-;719:5;;-1:-1:-1;;;;;719:5:3;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:3;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;1089:18:3;;;1001:111::o;7286:127:5:-;719:5:3;;-1:-1:-1;;;;;719:5:3;705:10;:19;697:28;;;;;;-1:-1:-1;;;;;7375:22:5;;;;;;;;:15;:22;;;;;:33;;-1:-1:-1;;7375:33:5;;;;;;;;;;7286:127::o;1320:46::-;;;;;;;;;;;;;:::o;238:20:3:-;;;-1:-1:-1;;;;;238:20:3;;:::o;733:32:5:-;;;;;;-1:-1:-1;;;733:32:5;;:::o;2524:550::-;10527:9;;-1:-1:-1;;;;;10527:9:5;10505:10;:32;10497:64;;;;;-1:-1:-1;;;;;10497:64:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;11441:12;;2659:5;;1227:47;-1:-1:-1;11441:38:5;11433:73;;;;;-1:-1:-1;;;;;11433:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;10905:2;10894:14;;10888:21;2696:5;;-1:-1:-1;;;;;;10928:43:5;;10944:27;10928:43;10920:86;;;;;-1:-1:-1;;;;;10920:86:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2794:7;2789:2;2782:5;2778:14;2771:31;2867:7;2862:2;2855:5;2851:14;2844:31;2992:4;-1:-1:-1;;;;;2984:26:5;3011:5;2984:33;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2984:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2976:70;;;;;;;-1:-1:-1;;;;;2976:70:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;11512:1;;10567;2524:550;;;:::o;6919:116::-;-1:-1:-1;;;;;7008:22:5;6989:4;7008:22;;;:15;:22;;;;;;;;;6919:116::o;1274:103:3:-;719:5;;-1:-1:-1;;;;;719:5:3;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;7728:231:5:-;719:5:3;;-1:-1:-1;;;;;719:5:3;705:10;:19;697:28;;;;;;7832:7:5;9784:40;7832:7;1069:1;9784:40;:11;:40;:::i;:::-;9762:18;;:62;;9754:128;;;;;-1:-1:-1;;;;;9754:128:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7870:18;;:31;;7893:7;7870:31;:22;:31;:::i;:::-;7849:18;:52;7914:9;;;:39;;;;;;-1:-1:-1;;;;;7914:39:5;;;;;;;;;;;;;;;;;;:9;;;;;:18;;:39;;;;;;;;;;;;;;;:9;;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;7914:39:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7914:39:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7914:39:5;7907:47;;;;;;731:1:3;7728:231:5;;:::o;1238:128:4:-;1319:7;;;1339;;;;1332:15;;;;1238:128;;;;:::o;1060:116::-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:4;;;1060:116::o;1512:171:3:-;-1:-1:-1;;;;;1582:23:3;;;;1574:32;;;;;;1638:5;;;1617:38;;-1:-1:-1;;;;;1617:38:3;;;;1638:5;;;1617:38;;;1661:5;:17;;-1:-1:-1;;1661:17:3;-1:-1:-1;;;;;1661:17:3;;;;;;;;;;1512:171::o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "cancelOracleRequest(bytes32,uint256,bytes4,uint256)": {
        "details": "Given params must hash to a commitment stored on the contract in order for the request to be valid Emits CancelOracleRequest event.",
        "notice": "Allows requesters to cancel requests sent to this oracle contract. Will transfer the LINK sent for the request back to the requester's address.",
        "params": {
          "_callbackFunc": "The requester's specified callback address",
          "_expiration": "The time of the expiration for the request",
          "_payment": "The amount of payment given (specified in wei)",
          "_requestId": "The request ID"
        }
      },
      "fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)": {
        "details": "Given params must hash back to the commitment stored from `oracleRequest`. Will call the callback address' callback function without bubbling up error checking in a `require` so that the node can get paid.",
        "notice": "Called by the Chainlink node to fulfill requests",
        "params": {
          "_callbackAddress": "The callback address to call for fulfillment",
          "_callbackFunctionId": "The callback function ID to use for fulfillment",
          "_data": "The data to return to the consuming contract",
          "_expiration": "The expiration that the node should respond by before the requester can cancel",
          "_payment": "The payment amount that will be released for the oracle (specified in wei)",
          "_requestId": "The fulfillment request ID that must match the requester's"
        },
        "return": "Status if the external call was successful"
      },
      "getAuthorizationStatus(address)": {
        "notice": "Use this to check if a node is authorized for fulfilling requests",
        "params": {
          "_node": "The address of the Chainlink node"
        },
        "return": "The authorization status of the node"
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "details": "The data payload's first 2 words will be overwritten by the `_sender` and `_amount` values to ensure correctness. Calls oracleRequest.",
        "notice": "Called when LINK is sent to the contract via `transferAndCall`",
        "params": {
          "_amount": "Amount of LINK sent (specified in wei)",
          "_data": "Payload of the transaction",
          "_sender": "Address of the sender"
        }
      },
      "oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)": {
        "details": "Stores the hash of the params as the on-chain commitment for the request. Emits OracleRequest event for the Chainlink node to detect.",
        "notice": "Creates the Chainlink request",
        "params": {
          "_callbackAddress": "The callback address for the response",
          "_callbackFunctionId": "The callback function ID for the response",
          "_data": "The CBOR payload of the request",
          "_dataVersion": "The specified data version",
          "_nonce": "The nonce sent by the requester",
          "_payment": "The amount of payment given (specified in wei)",
          "_sender": "The sender of the request",
          "_specId": "The Job Specification ID"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.",
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setFulfillmentPermission(address,bool)": {
        "notice": "Sets the fulfillment permission for a given node. Use `true` to allow, `false` to disallow.",
        "params": {
          "_allowed": "Bool value to determine if the node can fulfill requests",
          "_node": "The address of the Chainlink node"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      },
      "withdraw(address,uint256)": {
        "details": "The owner of the contract can be another wallet and does not have to be a Chainlink node",
        "notice": "Allows the node operator to withdraw earned LINK to a given address",
        "params": {
          "_amount": "The amount to send (specified in wei)",
          "_recipient": "The address to send the LINK token to"
        }
      },
      "withdrawable()": {
        "details": "We use `ONE_FOR_CONSISTENT_GAS_COST` in place of 0 in storage",
        "notice": "Displays the amount of LINK that is available for the node operator to withdraw",
        "return": "The amount of withdrawable LINK on the contract"
      }
    },
    "title": "The Chainlink Oracle contract"
  },
  "offset": [
    563,
    11521
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD6 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH3 0xDF475E DUP2 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x2DB7F1F4 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x40429946 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x42F6487A EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x4AB0D190 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x4B602282 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x50188301 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x6EE4D553 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x7FCD56DB EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x839DF945 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x9C1B2839 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xD3E9C314 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x383 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 DUP1 CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x24 DUP1 CALLDATALOAD SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD AND SWAP2 PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT PUSH1 0x84 CALLDATALOAD AND SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH1 0xE4 CALLDATALOAD SWAP2 DUP3 ADD SWAP2 ADD CALLDATALOAD PUSH2 0x3BC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH2 0x7DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x44 CALLDATALOAD AND PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT PUSH1 0x64 CALLDATALOAD AND PUSH1 0x84 CALLDATALOAD PUSH1 0xA4 CALLDATALOAD PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH2 0xADD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH2 0xAE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT PUSH1 0x44 CALLDATALOAD AND PUSH1 0x64 CALLDATALOAD PUSH2 0xB14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0xD5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD ISZERO ISZERO PUSH2 0xDC7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH1 0x4 CALLDATALOAD PUSH2 0xE09 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0xE1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x184 SWAP5 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP5 PUSH1 0x24 DUP1 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 SWAP5 PUSH1 0x64 SWAP5 SWAP3 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0xE4E SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1073 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1091 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x423 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420757365204C494E4B20746F6B656E00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP9 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP4 AND SWAP2 AND EQ ISZERO PUSH2 0x48B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616C6C6261636B20746F204C494E4B000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP12 SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP12 DUP2 AND SWAP2 SWAP1 SWAP2 OR PUSH24 0xFFFFFFFF0000000000000000000000000000000000000000 NOT AND PUSH21 0x10000000000000000000000000000000000000000 PUSH1 0xE0 PUSH1 0x2 EXP DUP13 DIV MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP15 AND PUSH13 0x1000000000000000000000000 MUL PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP1 DUP5 ADD DUP12 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x54 SWAP1 SWAP4 ADD SWAP2 DUP3 SWAP1 MSTORE DUP3 MLOAD DUP3 SWAP2 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x55B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x53C JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP5 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP3 SWAP1 KECCAK256 SLOAD SWAP2 SWAP7 POP POP ISZERO SWAP2 POP PUSH2 0x5EE SWAP1 POP JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420757365206120756E69717565204944000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x600 TIMESTAMP PUSH2 0x12C PUSH4 0xFFFFFFFF PUSH2 0x121E AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP16 SWAP1 MSTORE PUSH13 0x1000000000000000000000000 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP15 AND MUL DUP3 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT DUP13 AND PUSH1 0x54 DUP4 ADD MSTORE PUSH1 0x58 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x78 SWAP1 SWAP3 ADD SWAP3 DUP4 SWAP1 MSTORE DUP2 MLOAD SWAP4 SWAP6 POP SWAP1 SWAP3 DUP3 SWAP2 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x688 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP DUP10 PUSH1 0x0 NOT AND PUSH32 0xD8D7ECC4800D25FA53CE0372F13A416D98907A7EF3D8D3BDD79CF4FE75529C65 DUP14 DUP6 DUP15 DUP14 DUP14 DUP9 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD DUP1 DUP11 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD DUP3 SWAP1 SUB SWAP13 POP SWAP1 SWAP11 POP POP POP POP POP POP POP POP POP POP POP LOG2 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x80D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 0x889 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E20617574686F72697A6564206E6F646520746F2066756C66696C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C20726571756573747300000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP9 SWAP1 ISZERO ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206861766520612076616C6964207265717565737449640000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP12 SWAP1 MSTORE PUSH13 0x1000000000000000000000000 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP12 AND MUL DUP3 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT DUP10 AND PUSH1 0x54 DUP4 ADD MSTORE PUSH1 0x58 DUP1 DUP4 ADD DUP10 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x78 SWAP1 SWAP3 ADD SWAP3 DUP4 SWAP1 MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 DUP3 SWAP2 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x971 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x952 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP5 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP3 SWAP1 KECCAK256 SLOAD SWAP2 SWAP6 POP POP DUP5 EQ SWAP2 POP PUSH2 0xA05 SWAP1 POP JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506172616D7320646F206E6F74206D6174636820726571756573742049440000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xA18 SWAP1 DUP10 PUSH4 0xFFFFFFFF PUSH2 0x121E AND JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH3 0x61A80 GAS LT ISZERO PUSH2 0xA85 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742070726F7669646520636F6E73756D657220656E6F75676820676173 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP DUP1 DUP11 DIV SWAP2 DUP3 AND MUL DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP13 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 AND SWAP3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 GAS CALL SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12C DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xAFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xB0F SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x1231 AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH13 0x1000000000000000000000000 CALLER MUL DUP3 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT DUP6 AND PUSH1 0x54 DUP4 ADD MSTORE PUSH1 0x58 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x78 SWAP1 SWAP3 ADD SWAP3 DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x0 SWAP4 SWAP2 DUP3 SWAP2 SWAP1 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB8E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB6F JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP5 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP3 SWAP1 KECCAK256 SLOAD SWAP2 SWAP5 POP POP DUP4 EQ SWAP2 POP PUSH2 0xC22 SWAP1 POP JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506172616D7320646F206E6F74206D6174636820726571756573742049440000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 GT ISZERO PUSH2 0xC7A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175657374206973206E6F74206578706972656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP7 SWAP2 PUSH32 0xA7842B9EC549398102C0D91B1B9919B2F20558AEFDADF57528A95C6CD3292E93 SWAP2 LOG2 PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP8 SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO ISZERO PUSH2 0xD54 JUMPI INVALID JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP2 LOG2 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xDDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xEB0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420757365204C494E4B20746F6B656E00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 SWAP1 PUSH1 0x44 GT ISZERO PUSH2 0xF0C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642072657175657374206C656E67746800000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT DUP2 AND PUSH32 0x4042994600000000000000000000000000000000000000000000000000000000 EQ PUSH2 0xF94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374207573652077686974656C69737465642066756E6374696F6E730000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x24 DUP6 ADD MSTORE DUP5 PUSH1 0x44 DUP6 ADD MSTORE ADDRESS PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFD5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFBD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1002 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP ISZERO ISZERO PUSH2 0x106B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F2063726561746520726571756573740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x10A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B1 DUP2 PUSH2 0x1243 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0x10DD DUP2 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x121E AND JUMP JUMPDEST PUSH1 0x7 SLOAD LT ISZERO PUSH2 0x115C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74207265717565737465642069732067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20776974686472617761626C652062616C616E63650000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x116F SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1231 AND JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 DUP2 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO ISZERO PUSH2 0x1219 JUMPI INVALID JUMPDEST POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x122B JUMPI INVALID JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x123D JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x1258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc5 ADD 0xd0 PUSH14 0x3A4F9F0225EE0A6C256588B7B141 0xbf JUMP DUP1 MLOAD 0x29 ADDMOD SWAP13 PUSH25 0x43F9E672F47A00290000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        563,
        11521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "LT",
      "path": "5"
    },
    "9": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD6"
    },
    "12": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "18": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "20": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "22": {
      "op": "EXP"
    },
    "23": {
      "offset": [
        563,
        11521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "25": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DIV",
      "path": "5"
    },
    "27": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "AND",
      "path": "5"
    },
    "28": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0xDF475E"
    },
    "32": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP2",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "34": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDB"
    },
    "37": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "38": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2DB7F1F4"
    },
    "44": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "45": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10C"
    },
    "48": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "49": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x40429946"
    },
    "55": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "56": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x133"
    },
    "59": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "60": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x42F6487A"
    },
    "66": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "67": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x186"
    },
    "70": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "71": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4AB0D190"
    },
    "77": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "78": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19B"
    },
    "81": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "82": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4B602282"
    },
    "88": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "89": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E9"
    },
    "92": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "93": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x50188301"
    },
    "99": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "100": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1FE"
    },
    "103": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "104": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "105": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6EE4D553"
    },
    "110": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "111": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x213"
    },
    "114": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "116": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "121": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "122": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23E"
    },
    "125": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "127": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x7FCD56DB"
    },
    "132": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "133": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253"
    },
    "136": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "137": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "138": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x839DF945"
    },
    "143": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "144": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x279"
    },
    "147": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "149": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "154": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "155": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x291"
    },
    "158": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "160": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9C1B2839"
    },
    "165": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "166": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A6"
    },
    "169": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "170": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "171": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA4C0ED36"
    },
    "176": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "177": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D8"
    },
    "180": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "181": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "182": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD3E9C314"
    },
    "187": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "188": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x341"
    },
    "191": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "192": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "193": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "198": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "199": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x362"
    },
    "202": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "203": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "204": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF3FEF3A3"
    },
    "209": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "EQ",
      "path": "5"
    },
    "210": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x383"
    },
    "213": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "214": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "215": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "217": {
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "218": {
      "first_revert": true,
      "fn": null,
      "offset": [
        563,
        11521
      ],
      "op": "REVERT",
      "path": "5"
    },
    "219": {
      "offset": [
        699,
        729
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "220": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "221": {
      "op": "DUP1"
    },
    "222": {
      "op": "ISZERO"
    },
    "223": {
      "op": "PUSH2",
      "value": "0xE7"
    },
    "226": {
      "op": "JUMPI"
    },
    "227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "229": {
      "op": "DUP1"
    },
    "230": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "REVERT",
      "path": "5"
    },
    "231": {
      "op": "JUMPDEST"
    },
    "232": {
      "offset": [
        699,
        729
      ],
      "op": "POP",
      "path": "5"
    },
    "233": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF0"
    },
    "236": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A7"
    },
    "239": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "JUMP",
      "path": "5"
    },
    "240": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "241": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "243": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "DUP1",
      "path": "5"
    },
    "244": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "251": {
      "op": "EXP"
    },
    "252": {
      "op": "SUB"
    },
    "253": {
      "offset": [
        699,
        729
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "254": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "255": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "AND",
      "path": "5"
    },
    "256": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "DUP3",
      "path": "5"
    },
    "257": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "258": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "259": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "260": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "DUP2",
      "path": "5"
    },
    "261": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "262": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "SUB",
      "path": "5"
    },
    "263": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "265": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "ADD",
      "path": "5"
    },
    "266": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "267": {
      "fn": null,
      "offset": [
        699,
        729
      ],
      "op": "RETURN",
      "path": "5"
    },
    "268": {
      "offset": [
        769,
        792
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "269": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "270": {
      "op": "DUP1"
    },
    "271": {
      "op": "ISZERO"
    },
    "272": {
      "op": "PUSH2",
      "value": "0x118"
    },
    "275": {
      "op": "JUMPI"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "278": {
      "op": "DUP1"
    },
    "279": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "REVERT",
      "path": "5"
    },
    "280": {
      "op": "JUMPDEST"
    },
    "281": {
      "offset": [
        769,
        792
      ],
      "op": "POP",
      "path": "5"
    },
    "282": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x121"
    },
    "285": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B6"
    },
    "288": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "JUMP",
      "path": "5"
    },
    "289": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "290": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "292": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "DUP1",
      "path": "5"
    },
    "293": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "294": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "295": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "DUP3",
      "path": "5"
    },
    "296": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "297": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "298": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "299": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "DUP2",
      "path": "5"
    },
    "300": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "301": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "SUB",
      "path": "5"
    },
    "302": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "304": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "ADD",
      "path": "5"
    },
    "305": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "306": {
      "fn": null,
      "offset": [
        769,
        792
      ],
      "op": "RETURN",
      "path": "5"
    },
    "307": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "308": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "309": {
      "op": "DUP1"
    },
    "310": {
      "op": "ISZERO"
    },
    "311": {
      "op": "PUSH2",
      "value": "0x13F"
    },
    "314": {
      "op": "JUMPI"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "317": {
      "op": "DUP1"
    },
    "318": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "REVERT",
      "path": "5"
    },
    "319": {
      "op": "JUMPDEST"
    },
    "320": {
      "op": "POP"
    },
    "321": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x184"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "330": {
      "op": "EXP"
    },
    "331": {
      "op": "SUB"
    },
    "332": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "334": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "DUP1",
      "path": "5"
    },
    "335": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "336": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "DUP3",
      "path": "5"
    },
    "337": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "AND",
      "path": "5"
    },
    "338": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "339": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "341": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "DUP1",
      "path": "5"
    },
    "342": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "343": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "344": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "346": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "347": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "348": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "350": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "351": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "AND",
      "path": "5"
    },
    "352": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "359": {
      "op": "EXP"
    },
    "360": {
      "op": "SUB"
    },
    "361": {
      "op": "NOT"
    },
    "362": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x84"
    },
    "364": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "365": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "AND",
      "path": "5"
    },
    "366": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "367": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA4"
    },
    "369": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "370": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "371": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xC4"
    },
    "373": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "374": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "375": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE4"
    },
    "377": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "378": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "379": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "DUP3",
      "path": "5"
    },
    "380": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "ADD",
      "path": "5"
    },
    "381": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "382": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "ADD",
      "path": "5"
    },
    "383": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "384": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BC"
    },
    "387": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "JUMP",
      "path": "5"
    },
    "388": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "389": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "STOP",
      "path": "5"
    },
    "390": {
      "offset": [
        669,
        695
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "391": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        669,
        695
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "392": {
      "op": "DUP1"
    },
    "393": {
      "op": "ISZERO"
    },
    "394": {
      "op": "PUSH2",
      "value": "0x192"
    },
    "397": {
      "op": "JUMPI"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "400": {
      "op": "DUP1"
    },
    "401": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Oracle.oracleRequest",
      "offset": [
        669,
        695
      ],
      "op": "REVERT",
      "path": "5"
    },
    "402": {
      "op": "JUMPDEST"
    },
    "403": {
      "offset": [
        669,
        695
      ],
      "op": "POP",
      "path": "5"
    },
    "404": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        669,
        695
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x121"
    },
    "407": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        669,
        695
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7DD"
    },
    "410": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        669,
        695
      ],
      "op": "JUMP",
      "path": "5"
    },
    "411": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "412": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "413": {
      "op": "DUP1"
    },
    "414": {
      "op": "ISZERO"
    },
    "415": {
      "op": "PUSH2",
      "value": "0x1A7"
    },
    "418": {
      "op": "JUMPI"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "421": {
      "op": "DUP1"
    },
    "422": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "REVERT",
      "path": "5"
    },
    "423": {
      "op": "JUMPDEST"
    },
    "424": {
      "op": "POP"
    },
    "425": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D5"
    },
    "428": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "430": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "431": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "433": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "440": {
      "op": "EXP"
    },
    "441": {
      "op": "SUB"
    },
    "442": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "444": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "445": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "AND",
      "path": "5"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "448": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "452": {
      "op": "EXP"
    },
    "453": {
      "op": "SUB"
    },
    "454": {
      "op": "NOT"
    },
    "455": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "457": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "458": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "AND",
      "path": "5"
    },
    "459": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x84"
    },
    "461": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "462": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA4"
    },
    "464": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "465": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7E3"
    },
    "468": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "JUMP",
      "path": "5"
    },
    "469": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "470": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "472": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "DUP1",
      "path": "5"
    },
    "473": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "474": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "475": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "476": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "477": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "DUP3",
      "path": "5"
    },
    "478": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "479": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "480": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "481": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "DUP2",
      "path": "5"
    },
    "482": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "483": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "SUB",
      "path": "5"
    },
    "484": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "486": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "ADD",
      "path": "5"
    },
    "487": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "488": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "RETURN",
      "path": "5"
    },
    "489": {
      "offset": [
        797,
        844
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "490": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        797,
        844
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "491": {
      "op": "DUP1"
    },
    "492": {
      "op": "ISZERO"
    },
    "493": {
      "op": "PUSH2",
      "value": "0x1F5"
    },
    "496": {
      "op": "JUMPI"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "499": {
      "op": "DUP1"
    },
    "500": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        797,
        844
      ],
      "op": "REVERT",
      "path": "5"
    },
    "501": {
      "op": "JUMPDEST"
    },
    "502": {
      "offset": [
        797,
        844
      ],
      "op": "POP",
      "path": "5"
    },
    "503": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        797,
        844
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x121"
    },
    "506": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        797,
        844
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xADD"
    },
    "509": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        797,
        844
      ],
      "op": "JUMP",
      "path": "5"
    },
    "510": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8201,
        8336
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "511": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8201,
        8336
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "512": {
      "op": "DUP1"
    },
    "513": {
      "op": "ISZERO"
    },
    "514": {
      "op": "PUSH2",
      "value": "0x20A"
    },
    "517": {
      "op": "JUMPI"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "520": {
      "op": "DUP1"
    },
    "521": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Oracle.withdrawable",
      "offset": [
        8201,
        8336
      ],
      "op": "REVERT",
      "path": "5"
    },
    "522": {
      "op": "JUMPDEST"
    },
    "523": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8201,
        8336
      ],
      "op": "POP",
      "path": "5"
    },
    "524": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8201,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x121"
    },
    "527": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8201,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAE3"
    },
    "530": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8201,
        8336
      ],
      "op": "JUMP",
      "path": "5"
    },
    "531": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "532": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "533": {
      "op": "DUP1"
    },
    "534": {
      "op": "ISZERO"
    },
    "535": {
      "op": "PUSH2",
      "value": "0x21F"
    },
    "538": {
      "op": "JUMPI"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "541": {
      "op": "DUP1"
    },
    "542": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "REVERT",
      "path": "5"
    },
    "543": {
      "op": "JUMPDEST"
    },
    "544": {
      "op": "POP"
    },
    "545": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x184"
    },
    "548": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "550": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "551": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "553": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "556": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "560": {
      "op": "EXP"
    },
    "561": {
      "op": "SUB"
    },
    "562": {
      "op": "NOT"
    },
    "563": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "565": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "566": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "AND",
      "path": "5"
    },
    "567": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "569": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "570": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB14"
    },
    "573": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "JUMP",
      "path": "5"
    },
    "574": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1001,
        1112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "575": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1001,
        1112
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "576": {
      "op": "DUP1"
    },
    "577": {
      "op": "ISZERO"
    },
    "578": {
      "op": "PUSH2",
      "value": "0x24A"
    },
    "581": {
      "op": "JUMPI"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "584": {
      "op": "DUP1"
    },
    "585": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1001,
        1112
      ],
      "op": "REVERT",
      "path": "3"
    },
    "586": {
      "op": "JUMPDEST"
    },
    "587": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1001,
        1112
      ],
      "op": "POP",
      "path": "3"
    },
    "588": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1001,
        1112
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x184"
    },
    "591": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1001,
        1112
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5B"
    },
    "594": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1001,
        1112
      ],
      "op": "JUMP",
      "path": "3"
    },
    "595": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7286,
        7413
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "596": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7286,
        7413
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "597": {
      "op": "DUP1"
    },
    "598": {
      "op": "ISZERO"
    },
    "599": {
      "op": "PUSH2",
      "value": "0x25F"
    },
    "602": {
      "op": "JUMPI"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "605": {
      "op": "DUP1"
    },
    "606": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7286,
        7413
      ],
      "op": "REVERT",
      "path": "5"
    },
    "607": {
      "op": "JUMPDEST"
    },
    "608": {
      "op": "POP"
    },
    "609": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7286,
        7413
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x184"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "618": {
      "op": "EXP"
    },
    "619": {
      "op": "SUB"
    },
    "620": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7286,
        7413
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "622": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7286,
        7413
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "623": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7286,
        7413
      ],
      "op": "AND",
      "path": "5"
    },
    "624": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7286,
        7413
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "626": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7286,
        7413
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "627": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7286,
        7413
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "628": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7286,
        7413
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "629": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7286,
        7413
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDC7"
    },
    "632": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7286,
        7413
      ],
      "op": "JUMP",
      "path": "5"
    },
    "633": {
      "offset": [
        1320,
        1366
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "634": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "635": {
      "op": "DUP1"
    },
    "636": {
      "op": "ISZERO"
    },
    "637": {
      "op": "PUSH2",
      "value": "0x285"
    },
    "640": {
      "op": "JUMPI"
    },
    "641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "643": {
      "op": "DUP1"
    },
    "644": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "REVERT",
      "path": "5"
    },
    "645": {
      "op": "JUMPDEST"
    },
    "646": {
      "op": "POP"
    },
    "647": {
      "offset": [
        1320,
        1366
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x121"
    },
    "650": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "652": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "653": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE09"
    },
    "656": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "JUMP",
      "path": "5"
    },
    "657": {
      "offset": [
        238,
        258
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "658": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        238,
        258
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "659": {
      "op": "DUP1"
    },
    "660": {
      "op": "ISZERO"
    },
    "661": {
      "op": "PUSH2",
      "value": "0x29D"
    },
    "664": {
      "op": "JUMPI"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "667": {
      "op": "DUP1"
    },
    "668": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        238,
        258
      ],
      "op": "REVERT",
      "path": "3"
    },
    "669": {
      "op": "JUMPDEST"
    },
    "670": {
      "offset": [
        238,
        258
      ],
      "op": "POP",
      "path": "3"
    },
    "671": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        238,
        258
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF0"
    },
    "674": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        238,
        258
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE1B"
    },
    "677": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        238,
        258
      ],
      "op": "JUMP",
      "path": "3"
    },
    "678": {
      "offset": [
        733,
        765
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "679": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "680": {
      "op": "DUP1"
    },
    "681": {
      "op": "ISZERO"
    },
    "682": {
      "op": "PUSH2",
      "value": "0x2B2"
    },
    "685": {
      "op": "JUMPI"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "688": {
      "op": "DUP1"
    },
    "689": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "REVERT",
      "path": "5"
    },
    "690": {
      "op": "JUMPDEST"
    },
    "691": {
      "offset": [
        733,
        765
      ],
      "op": "POP",
      "path": "5"
    },
    "692": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "695": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE2A"
    },
    "698": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "JUMP",
      "path": "5"
    },
    "699": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "700": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "702": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "DUP1",
      "path": "5"
    },
    "703": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "706": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "710": {
      "op": "EXP"
    },
    "711": {
      "op": "SUB"
    },
    "712": {
      "op": "NOT"
    },
    "713": {
      "offset": [
        733,
        765
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "714": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "715": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "AND",
      "path": "5"
    },
    "716": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "DUP3",
      "path": "5"
    },
    "717": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "718": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "719": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "720": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "DUP2",
      "path": "5"
    },
    "721": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "722": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "SUB",
      "path": "5"
    },
    "723": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "725": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "ADD",
      "path": "5"
    },
    "726": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "727": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "RETURN",
      "path": "5"
    },
    "728": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "729": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "730": {
      "op": "DUP1"
    },
    "731": {
      "op": "ISZERO"
    },
    "732": {
      "op": "PUSH2",
      "value": "0x2E4"
    },
    "735": {
      "op": "JUMPI"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "738": {
      "op": "DUP1"
    },
    "739": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "REVERT",
      "path": "5"
    },
    "740": {
      "op": "JUMPDEST"
    },
    "741": {
      "op": "POP"
    },
    "742": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "744": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP1",
      "path": "5"
    },
    "745": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "746": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "748": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "750": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "752": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "753": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP2",
      "path": "5"
    },
    "754": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP2",
      "path": "5"
    },
    "755": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "ADD",
      "path": "5"
    },
    "756": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "757": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "759": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP2",
      "path": "5"
    },
    "760": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "ADD",
      "path": "5"
    },
    "761": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP5",
      "path": "5"
    },
    "762": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "763": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DIV",
      "path": "5"
    },
    "764": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP5",
      "path": "5"
    },
    "765": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "MUL",
      "path": "5"
    },
    "766": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP6",
      "path": "5"
    },
    "767": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "ADD",
      "path": "5"
    },
    "768": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP5",
      "path": "5"
    },
    "769": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "ADD",
      "path": "5"
    },
    "770": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "771": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "772": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "773": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP5",
      "path": "5"
    },
    "774": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP5",
      "path": "5"
    },
    "775": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "776": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x184"
    },
    "779": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "780": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP3",
      "path": "5"
    },
    "781": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "788": {
      "op": "EXP"
    },
    "789": {
      "op": "SUB"
    },
    "790": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "AND",
      "path": "5"
    },
    "791": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "792": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "794": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP1",
      "path": "5"
    },
    "795": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "796": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "797": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "798": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "799": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "800": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "802": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "803": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "804": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "ADD",
      "path": "5"
    },
    "805": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "806": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "807": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP2",
      "path": "5"
    },
    "808": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "809": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP5",
      "path": "5"
    },
    "810": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "ADD",
      "path": "5"
    },
    "811": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP4",
      "path": "5"
    },
    "812": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP3",
      "path": "5"
    },
    "813": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP1",
      "path": "5"
    },
    "814": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP3",
      "path": "5"
    },
    "815": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "DUP5",
      "path": "5"
    },
    "816": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "817": {
      "op": "POP"
    },
    "818": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "819": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE4E"
    },
    "824": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "825": {
      "op": "POP"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "op": "POP"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "op": "POP"
    },
    "830": {
      "op": "POP"
    },
    "831": {
      "op": "POP"
    },
    "832": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "JUMP",
      "path": "5"
    },
    "833": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6919,
        7035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "834": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6919,
        7035
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "835": {
      "op": "DUP1"
    },
    "836": {
      "op": "ISZERO"
    },
    "837": {
      "op": "PUSH2",
      "value": "0x34D"
    },
    "840": {
      "op": "JUMPI"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "843": {
      "op": "DUP1"
    },
    "844": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6919,
        7035
      ],
      "op": "REVERT",
      "path": "5"
    },
    "845": {
      "op": "JUMPDEST"
    },
    "846": {
      "op": "POP"
    },
    "847": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6919,
        7035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D5"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "856": {
      "op": "EXP"
    },
    "857": {
      "op": "SUB"
    },
    "858": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6919,
        7035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "860": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6919,
        7035
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "861": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6919,
        7035
      ],
      "op": "AND",
      "path": "5"
    },
    "862": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6919,
        7035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1073"
    },
    "865": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6919,
        7035
      ],
      "op": "JUMP",
      "path": "5"
    },
    "866": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1274,
        1377
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "867": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1274,
        1377
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "868": {
      "op": "DUP1"
    },
    "869": {
      "op": "ISZERO"
    },
    "870": {
      "op": "PUSH2",
      "value": "0x36E"
    },
    "873": {
      "op": "JUMPI"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "876": {
      "op": "DUP1"
    },
    "877": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.transferOwnership",
      "offset": [
        1274,
        1377
      ],
      "op": "REVERT",
      "path": "3"
    },
    "878": {
      "op": "JUMPDEST"
    },
    "879": {
      "op": "POP"
    },
    "880": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1274,
        1377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x184"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "889": {
      "op": "EXP"
    },
    "890": {
      "op": "SUB"
    },
    "891": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1274,
        1377
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "893": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1274,
        1377
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "894": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1274,
        1377
      ],
      "op": "AND",
      "path": "3"
    },
    "895": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1274,
        1377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1091"
    },
    "898": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1274,
        1377
      ],
      "op": "JUMP",
      "path": "3"
    },
    "899": {
      "fn": "Oracle.withdraw",
      "offset": [
        7728,
        7959
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "900": {
      "fn": "Oracle.withdraw",
      "offset": [
        7728,
        7959
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "901": {
      "op": "DUP1"
    },
    "902": {
      "op": "ISZERO"
    },
    "903": {
      "op": "PUSH2",
      "value": "0x38F"
    },
    "906": {
      "op": "JUMPI"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "909": {
      "op": "DUP1"
    },
    "910": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Oracle.withdraw",
      "offset": [
        7728,
        7959
      ],
      "op": "REVERT",
      "path": "5"
    },
    "911": {
      "op": "JUMPDEST"
    },
    "912": {
      "op": "POP"
    },
    "913": {
      "fn": "Oracle.withdraw",
      "offset": [
        7728,
        7959
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x184"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "922": {
      "op": "EXP"
    },
    "923": {
      "op": "SUB"
    },
    "924": {
      "fn": "Oracle.withdraw",
      "offset": [
        7728,
        7959
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "926": {
      "fn": "Oracle.withdraw",
      "offset": [
        7728,
        7959
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "927": {
      "fn": "Oracle.withdraw",
      "offset": [
        7728,
        7959
      ],
      "op": "AND",
      "path": "5"
    },
    "928": {
      "fn": "Oracle.withdraw",
      "offset": [
        7728,
        7959
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "930": {
      "fn": "Oracle.withdraw",
      "offset": [
        7728,
        7959
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "931": {
      "fn": "Oracle.withdraw",
      "offset": [
        7728,
        7959
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10B4"
    },
    "934": {
      "fn": "Oracle.withdraw",
      "offset": [
        7728,
        7959
      ],
      "op": "JUMP",
      "path": "5"
    },
    "935": {
      "offset": [
        699,
        729
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "936": {
      "fn": "Oracle.withdraw",
      "offset": [
        699,
        729
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "938": {
      "fn": "Oracle.withdraw",
      "offset": [
        699,
        729
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "945": {
      "op": "EXP"
    },
    "946": {
      "op": "SUB"
    },
    "947": {
      "offset": [
        699,
        729
      ],
      "op": "AND",
      "path": "5"
    },
    "948": {
      "fn": "Oracle.withdraw",
      "offset": [
        699,
        729
      ],
      "op": "DUP2",
      "path": "5"
    },
    "949": {
      "fn": "Oracle.withdraw",
      "jump": "o",
      "offset": [
        699,
        729
      ],
      "op": "JUMP",
      "path": "5"
    },
    "950": {
      "offset": [
        769,
        792
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "951": {
      "fn": "Oracle.withdraw",
      "offset": [
        769,
        792
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "953": {
      "fn": "Oracle.withdraw",
      "offset": [
        769,
        792
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "954": {
      "fn": "Oracle.withdraw",
      "offset": [
        769,
        792
      ],
      "op": "DUP2",
      "path": "5"
    },
    "955": {
      "fn": "Oracle.withdraw",
      "jump": "o",
      "offset": [
        769,
        792
      ],
      "op": "JUMP",
      "path": "5"
    },
    "956": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "957": {
      "offset": [
        10527,
        10536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "959": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10527,
        10536
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "960": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4140,
        4157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "962": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4140,
        4157
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "963": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4140,
        4157
      ],
      "op": "DUP2",
      "path": "5"
    },
    "964": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4140,
        4157
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "971": {
      "op": "EXP"
    },
    "972": {
      "op": "SUB"
    },
    "973": {
      "offset": [
        10527,
        10536
      ],
      "op": "AND",
      "path": "5"
    },
    "974": {
      "offset": [
        10505,
        10515
      ],
      "op": "CALLER",
      "path": "5"
    },
    "975": {
      "offset": [
        10505,
        10537
      ],
      "op": "EQ",
      "path": "5"
    },
    "976": {
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x423"
    },
    "979": {
      "offset": [
        10497,
        10561
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "980": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "982": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "DUP1",
      "path": "5"
    },
    "983": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "988": {
      "op": "EXP"
    },
    "989": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "993": {
      "op": "MUL"
    },
    "994": {
      "offset": [
        10497,
        10561
      ],
      "op": "DUP2",
      "path": "5"
    },
    "995": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "996": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "998": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1000": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1001": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "ADD",
      "path": "5"
    },
    "1002": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1003": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "1005": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "1007": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1008": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "ADD",
      "path": "5"
    },
    "1009": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1010": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4D75737420757365204C494E4B20746F6B656E00000000000000000000000000"
    },
    "1043": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "1045": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1046": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "ADD",
      "path": "5"
    },
    "1047": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1048": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1049": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1050": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1051": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1052": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1053": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "SUB",
      "path": "5"
    },
    "1054": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "1056": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "ADD",
      "path": "5"
    },
    "1057": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1058": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1059": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10497,
        10561
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1060": {
      "offset": [
        11203,
        11212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1062": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11203,
        11212
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1063": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4002,
        4018
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1064": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4002,
        4018
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1071": {
      "op": "EXP"
    },
    "1072": {
      "op": "SUB"
    },
    "1073": {
      "offset": [
        11188,
        11213
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1074": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11188,
        11213
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1075": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11188,
        11213
      ],
      "op": "AND",
      "path": "5"
    },
    "1076": {
      "offset": [
        11203,
        11212
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1077": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11203,
        11212
      ],
      "op": "AND",
      "path": "5"
    },
    "1078": {
      "offset": [
        11188,
        11213
      ],
      "op": "EQ",
      "path": "5"
    },
    "1079": {
      "branch": 33,
      "fn": "Oracle.oracleRequest",
      "offset": [
        11188,
        11213
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1080": {
      "offset": [
        11180,
        11241
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x48B"
    },
    "1083": {
      "branch": 33,
      "offset": [
        11180,
        11241
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1084": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1086": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1087": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1092": {
      "op": "EXP"
    },
    "1093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1097": {
      "op": "MUL"
    },
    "1098": {
      "offset": [
        11180,
        11241
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1099": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1100": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1102": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1104": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1105": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "ADD",
      "path": "5"
    },
    "1106": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1107": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x17"
    },
    "1109": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "1111": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1112": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "ADD",
      "path": "5"
    },
    "1113": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1114": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x43616E6E6F742063616C6C6261636B20746F204C494E4B000000000000000000"
    },
    "1147": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "1149": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1150": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "ADD",
      "path": "5"
    },
    "1151": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1152": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1153": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1154": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1155": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1156": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1157": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "SUB",
      "path": "5"
    },
    "1158": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "1160": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "ADD",
      "path": "5"
    },
    "1161": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1162": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1163": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        11180,
        11241
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1164": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4028,
        4035
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 0,
      "value": "0x1"
    },
    "1166": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4028,
        4046
      ],
      "op": "DUP12",
      "path": "5"
    },
    "1167": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4028,
        4046
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1168": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4028,
        4046
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1169": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4052,
        4067
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x2"
    },
    "1171": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4052,
        4086
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1172": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4052,
        4086
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1173": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1194": {
      "op": "NOT"
    },
    "1195": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4052,
        4086
      ],
      "op": "AND",
      "path": "5"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1202": {
      "op": "EXP"
    },
    "1203": {
      "op": "SUB"
    },
    "1204": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4052,
        4086
      ],
      "op": "DUP12",
      "path": "5"
    },
    "1205": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4052,
        4086
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1206": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4052,
        4086
      ],
      "op": "AND",
      "path": "5"
    },
    "1207": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4052,
        4086
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1208": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4052,
        4086
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1209": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4052,
        4086
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1210": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4052,
        4086
      ],
      "op": "OR",
      "path": "5"
    },
    "1211": {
      "op": "PUSH24",
      "value": "0xFFFFFFFF0000000000000000000000000000000000000000"
    },
    "1236": {
      "op": "NOT"
    },
    "1237": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4092,
        4132
      ],
      "op": "AND",
      "path": "5",
      "statement": 2
    },
    "1238": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4092,
        4132
      ],
      "op": "PUSH21",
      "path": "5",
      "value": "0x10000000000000000000000000000000000000000"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1264": {
      "op": "EXP"
    },
    "1265": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4092,
        4132
      ],
      "op": "DUP13",
      "path": "5"
    },
    "1266": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4092,
        4132
      ],
      "op": "DIV",
      "path": "5"
    },
    "1267": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4092,
        4132
      ],
      "op": "MUL",
      "path": "5"
    },
    "1268": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4092,
        4132
      ],
      "op": "OR",
      "path": "5"
    },
    "1269": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4092,
        4132
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1270": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4092,
        4132
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1271": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4092,
        4132
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1272": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1274": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1275": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1276": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1277": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "DUP15",
      "path": "5"
    },
    "1278": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "AND",
      "path": "5"
    },
    "1279": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "PUSH13",
      "path": "5",
      "value": "0x1000000000000000000000000"
    },
    "1293": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "MUL",
      "path": "5"
    },
    "1294": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1296": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1297": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1298": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "ADD",
      "path": "5"
    },
    "1299": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1300": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1301": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1302": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1303": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x34"
    },
    "1305": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1306": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1307": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "ADD",
      "path": "5"
    },
    "1308": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "DUP12",
      "path": "5"
    },
    "1309": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1310": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1311": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1312": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1313": {
      "op": "DUP1"
    },
    "1314": {
      "op": "DUP6"
    },
    "1315": {
      "op": "SUB"
    },
    "1316": {
      "op": "SWAP1"
    },
    "1317": {
      "op": "SWAP2"
    },
    "1318": {
      "op": "ADD"
    },
    "1319": {
      "op": "DUP2"
    },
    "1320": {
      "op": "MSTORE"
    },
    "1321": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x54"
    },
    "1323": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1324": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1325": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "ADD",
      "path": "5"
    },
    "1326": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1327": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1328": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1329": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1330": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1331": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1332": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1333": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1334": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1335": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "ADD",
      "path": "5"
    },
    "1336": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1337": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1338": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4170,
        4203
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1339": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1340": {
      "op": "JUMPDEST"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1343": {
      "op": "DUP4"
    },
    "1344": {
      "op": "LT"
    },
    "1345": {
      "op": "PUSH2",
      "value": "0x55B"
    },
    "1348": {
      "op": "JUMPI"
    },
    "1349": {
      "op": "DUP1"
    },
    "1350": {
      "op": "MLOAD"
    },
    "1351": {
      "op": "DUP3"
    },
    "1352": {
      "op": "MSTORE"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1355": {
      "op": "NOT"
    },
    "1356": {
      "op": "SWAP1"
    },
    "1357": {
      "op": "SWAP3"
    },
    "1358": {
      "op": "ADD"
    },
    "1359": {
      "op": "SWAP2"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1362": {
      "op": "SWAP2"
    },
    "1363": {
      "op": "DUP3"
    },
    "1364": {
      "op": "ADD"
    },
    "1365": {
      "op": "SWAP2"
    },
    "1366": {
      "op": "ADD"
    },
    "1367": {
      "op": "PUSH2",
      "value": "0x53C"
    },
    "1370": {
      "op": "JUMP"
    },
    "1371": {
      "op": "JUMPDEST"
    },
    "1372": {
      "op": "MLOAD"
    },
    "1373": {
      "op": "DUP2"
    },
    "1374": {
      "op": "MLOAD"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1377": {
      "op": "SWAP4"
    },
    "1378": {
      "op": "DUP5"
    },
    "1379": {
      "op": "SUB"
    },
    "1380": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1383": {
      "op": "EXP"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1386": {
      "op": "NOT"
    },
    "1387": {
      "op": "ADD"
    },
    "1388": {
      "op": "DUP1"
    },
    "1389": {
      "op": "NOT"
    },
    "1390": {
      "op": "SWAP1"
    },
    "1391": {
      "op": "SWAP3"
    },
    "1392": {
      "op": "AND"
    },
    "1393": {
      "op": "SWAP2"
    },
    "1394": {
      "op": "AND"
    },
    "1395": {
      "op": "OR"
    },
    "1396": {
      "op": "SWAP1"
    },
    "1397": {
      "op": "MSTORE"
    },
    "1398": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1400": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1401": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1402": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1403": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1404": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1405": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "ADD",
      "path": "5"
    },
    "1406": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1407": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1408": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "SUB",
      "path": "5"
    },
    "1409": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1410": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1411": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1414": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4218,
        4240
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 3
    },
    "1415": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4218,
        4240
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1416": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4218,
        4240
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1417": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4218,
        4229
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1419": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4218,
        4240
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1420": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4218,
        4240
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1421": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4218,
        4240
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1422": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4218,
        4240
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1423": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4218,
        4240
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1424": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4218,
        4240
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1425": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4218,
        4240
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1426": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1427": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4160,
        4204
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "1428": {
      "op": "POP"
    },
    "1429": {
      "op": "POP"
    },
    "1430": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4218,
        4245
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1431": {
      "branch": 34,
      "fn": "Oracle.oracleRequest",
      "offset": [
        4218,
        4245
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1432": {
      "op": "POP"
    },
    "1433": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5EE"
    },
    "1436": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1437": {
      "op": "POP"
    },
    "1438": {
      "branch": 34,
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1439": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1441": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1442": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1447": {
      "op": "EXP"
    },
    "1448": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1452": {
      "op": "MUL"
    },
    "1453": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1454": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1455": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1457": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1459": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1460": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "ADD",
      "path": "5"
    },
    "1461": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1462": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x14"
    },
    "1464": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "1466": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1467": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "ADD",
      "path": "5"
    },
    "1468": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1469": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4D75737420757365206120756E69717565204944000000000000000000000000"
    },
    "1502": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "1504": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1505": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "ADD",
      "path": "5"
    },
    "1506": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1507": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1508": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1509": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1510": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1511": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1512": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "SUB",
      "path": "5"
    },
    "1513": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "1515": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "ADD",
      "path": "5"
    },
    "1516": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1517": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1518": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4210,
        4270
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1519": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4347,
        4367
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x600"
    },
    "1522": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4347,
        4350
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "1523": {
      "offset": [
        835,
        844
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12C"
    },
    "1526": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4347,
        4367
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "1531": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4347,
        4354
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x121E"
    },
    "1534": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4347,
        4367
      ],
      "op": "AND",
      "path": "5"
    },
    "1535": {
      "fn": "Oracle.oracleRequest",
      "jump": "i",
      "offset": [
        4347,
        4367
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1536": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4347,
        4367
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1537": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4373,
        4381
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x3"
    },
    "1539": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4373,
        4394
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1540": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4373,
        4394
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1541": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4373,
        4394
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1542": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 5,
      "value": "0x40"
    },
    "1544": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1545": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1546": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1548": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1549": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1550": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "ADD",
      "path": "5"
    },
    "1551": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP16",
      "path": "5"
    },
    "1552": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1553": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1554": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "PUSH13",
      "path": "5",
      "value": "0x1000000000000000000000000"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1574": {
      "op": "EXP"
    },
    "1575": {
      "op": "SUB"
    },
    "1576": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP15",
      "path": "5"
    },
    "1577": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "AND",
      "path": "5"
    },
    "1578": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "MUL",
      "path": "5"
    },
    "1579": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1580": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1581": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "ADD",
      "path": "5"
    },
    "1582": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1589": {
      "op": "EXP"
    },
    "1590": {
      "op": "SUB"
    },
    "1591": {
      "op": "NOT"
    },
    "1592": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP13",
      "path": "5"
    },
    "1593": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "AND",
      "path": "5"
    },
    "1594": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x54"
    },
    "1596": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1597": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "ADD",
      "path": "5"
    },
    "1598": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1599": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x58"
    },
    "1601": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1602": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1603": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "ADD",
      "path": "5"
    },
    "1604": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1605": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1606": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1607": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1608": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1609": {
      "op": "DUP1"
    },
    "1610": {
      "op": "DUP5"
    },
    "1611": {
      "op": "SUB"
    },
    "1612": {
      "op": "SWAP1"
    },
    "1613": {
      "op": "SWAP2"
    },
    "1614": {
      "op": "ADD"
    },
    "1615": {
      "op": "DUP2"
    },
    "1616": {
      "op": "MSTORE"
    },
    "1617": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x78"
    },
    "1619": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1620": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1621": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "ADD",
      "path": "5"
    },
    "1622": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1623": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1624": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1625": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1626": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1627": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1628": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4326,
        4367
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1629": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4326,
        4367
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1630": {
      "op": "POP"
    },
    "1631": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1632": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1633": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1634": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1635": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1636": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "ADD",
      "path": "5"
    },
    "1637": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1638": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1639": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4443,
        4560
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1640": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1641": {
      "op": "JUMPDEST"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1644": {
      "op": "DUP4"
    },
    "1645": {
      "op": "LT"
    },
    "1646": {
      "op": "PUSH2",
      "value": "0x688"
    },
    "1649": {
      "op": "JUMPI"
    },
    "1650": {
      "op": "DUP1"
    },
    "1651": {
      "op": "MLOAD"
    },
    "1652": {
      "op": "DUP3"
    },
    "1653": {
      "op": "MSTORE"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1656": {
      "op": "NOT"
    },
    "1657": {
      "op": "SWAP1"
    },
    "1658": {
      "op": "SWAP3"
    },
    "1659": {
      "op": "ADD"
    },
    "1660": {
      "op": "SWAP2"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1663": {
      "op": "SWAP2"
    },
    "1664": {
      "op": "DUP3"
    },
    "1665": {
      "op": "ADD"
    },
    "1666": {
      "op": "SWAP2"
    },
    "1667": {
      "op": "ADD"
    },
    "1668": {
      "op": "PUSH2",
      "value": "0x669"
    },
    "1671": {
      "op": "JUMP"
    },
    "1672": {
      "op": "JUMPDEST"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1675": {
      "op": "DUP4"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1678": {
      "op": "SUB"
    },
    "1679": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1682": {
      "op": "EXP"
    },
    "1683": {
      "op": "SUB"
    },
    "1684": {
      "op": "DUP1"
    },
    "1685": {
      "op": "NOT"
    },
    "1686": {
      "op": "DUP3"
    },
    "1687": {
      "op": "MLOAD"
    },
    "1688": {
      "op": "AND"
    },
    "1689": {
      "op": "DUP2"
    },
    "1690": {
      "op": "DUP5"
    },
    "1691": {
      "op": "MLOAD"
    },
    "1692": {
      "op": "AND"
    },
    "1693": {
      "op": "DUP1"
    },
    "1694": {
      "op": "DUP3"
    },
    "1695": {
      "op": "OR"
    },
    "1696": {
      "op": "DUP6"
    },
    "1697": {
      "op": "MSTORE"
    },
    "1698": {
      "op": "POP"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "op": "POP"
    },
    "1701": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "POP",
      "path": "5"
    },
    "1702": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "POP",
      "path": "5"
    },
    "1703": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "POP",
      "path": "5"
    },
    "1704": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1705": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "POP",
      "path": "5"
    },
    "1706": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "ADD",
      "path": "5"
    },
    "1707": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1708": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "POP",
      "path": "5"
    },
    "1709": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "POP",
      "path": "5"
    },
    "1710": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1712": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1713": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1714": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1715": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "SUB",
      "path": "5"
    },
    "1716": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1717": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4426,
        4566
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1718": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4412
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1720": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1722": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4413,
        4422
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1723": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1725": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "NOT",
      "path": "5"
    },
    "1726": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "AND",
      "path": "5"
    },
    "1727": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1729": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "NOT",
      "path": "5"
    },
    "1730": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "AND",
      "path": "5"
    },
    "1731": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1732": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1733": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1735": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "ADD",
      "path": "5"
    },
    "1736": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1737": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1738": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1739": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1741": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "ADD",
      "path": "5"
    },
    "1742": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1744": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4423
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1745": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4566
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1746": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4566
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1748": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4566
      ],
      "op": "NOT",
      "path": "5"
    },
    "1749": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4566
      ],
      "op": "AND",
      "path": "5"
    },
    "1750": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4566
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1751": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4566
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1752": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4401,
        4566
      ],
      "op": "POP",
      "path": "5"
    },
    "1753": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4599,
        4606
      ],
      "op": "DUP10",
      "path": "5",
      "statement": 6
    },
    "1754": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1756": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "NOT",
      "path": "5"
    },
    "1757": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "AND",
      "path": "5"
    },
    "1758": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xD8D7ECC4800D25FA53CE0372F13A416D98907A7EF3D8D3BDD79CF4FE75529C65"
    },
    "1791": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4614,
        4621
      ],
      "op": "DUP14",
      "path": "5"
    },
    "1792": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4629,
        4638
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1793": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4646,
        4654
      ],
      "op": "DUP15",
      "path": "5"
    },
    "1794": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4662,
        4678
      ],
      "op": "DUP14",
      "path": "5"
    },
    "1795": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4686,
        4705
      ],
      "op": "DUP14",
      "path": "5"
    },
    "1796": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4713,
        4723
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1797": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4731,
        4743
      ],
      "op": "DUP14",
      "path": "5"
    },
    "1798": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4751,
        4756
      ],
      "op": "DUP14",
      "path": "5"
    },
    "1799": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4751,
        4756
      ],
      "op": "DUP14",
      "path": "5"
    },
    "1800": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1802": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1803": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1804": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP11",
      "path": "5"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1811": {
      "op": "EXP"
    },
    "1812": {
      "op": "SUB"
    },
    "1813": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "AND",
      "path": "5"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1820": {
      "op": "EXP"
    },
    "1821": {
      "op": "SUB"
    },
    "1822": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "AND",
      "path": "5"
    },
    "1823": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1824": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1825": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1827": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "ADD",
      "path": "5"
    },
    "1828": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP10",
      "path": "5"
    },
    "1829": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1831": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "NOT",
      "path": "5"
    },
    "1832": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "AND",
      "path": "5"
    },
    "1833": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1835": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "NOT",
      "path": "5"
    },
    "1836": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "AND",
      "path": "5"
    },
    "1837": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1838": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1839": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1841": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "ADD",
      "path": "5"
    },
    "1842": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1843": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1844": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1845": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1847": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "ADD",
      "path": "5"
    },
    "1848": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1855": {
      "op": "EXP"
    },
    "1856": {
      "op": "SUB"
    },
    "1857": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "AND",
      "path": "5"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1864": {
      "op": "EXP"
    },
    "1865": {
      "op": "SUB"
    },
    "1866": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "AND",
      "path": "5"
    },
    "1867": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1868": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1869": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1871": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "ADD",
      "path": "5"
    },
    "1872": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1873": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH28",
      "path": "5",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1902": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "NOT",
      "path": "5"
    },
    "1903": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "AND",
      "path": "5"
    },
    "1904": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH28",
      "path": "5",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1933": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "NOT",
      "path": "5"
    },
    "1934": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "AND",
      "path": "5"
    },
    "1935": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1936": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1937": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1939": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "ADD",
      "path": "5"
    },
    "1940": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1941": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1942": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1943": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1945": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "ADD",
      "path": "5"
    },
    "1946": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1947": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1948": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1949": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1951": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "ADD",
      "path": "5"
    },
    "1952": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1953": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1955": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "ADD",
      "path": "5"
    },
    "1956": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1957": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1958": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "SUB",
      "path": "5"
    },
    "1959": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1960": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1961": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1962": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1963": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1964": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1965": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1966": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1967": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1969": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "ADD",
      "path": "5"
    },
    "1970": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1971": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "POP",
      "path": "5"
    },
    "1972": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1973": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1974": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1975": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "1976": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1978": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1979": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1980": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "ADD",
      "path": "5"
    },
    "1981": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1982": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1983": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "SUB",
      "path": "5"
    },
    "1984": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "SWAP13",
      "path": "5"
    },
    "1985": {
      "op": "POP"
    },
    "1986": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1987": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "SWAP11",
      "path": "5"
    },
    "1988": {
      "op": "POP"
    },
    "1989": {
      "op": "POP"
    },
    "1990": {
      "op": "POP"
    },
    "1991": {
      "op": "POP"
    },
    "1992": {
      "op": "POP"
    },
    "1993": {
      "op": "POP"
    },
    "1994": {
      "op": "POP"
    },
    "1995": {
      "op": "POP"
    },
    "1996": {
      "op": "POP"
    },
    "1997": {
      "op": "POP"
    },
    "1998": {
      "op": "POP"
    },
    "1999": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        4578,
        4757
      ],
      "op": "LOG2",
      "path": "5"
    },
    "2000": {
      "offset": [
        10567,
        10568
      ],
      "op": "POP",
      "path": "5"
    },
    "2001": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "POP",
      "path": "5"
    },
    "2002": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "POP",
      "path": "5"
    },
    "2003": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "POP",
      "path": "5"
    },
    "2004": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "POP",
      "path": "5"
    },
    "2005": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "POP",
      "path": "5"
    },
    "2006": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "POP",
      "path": "5"
    },
    "2007": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "POP",
      "path": "5"
    },
    "2008": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "POP",
      "path": "5"
    },
    "2009": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "POP",
      "path": "5"
    },
    "2010": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "POP",
      "path": "5"
    },
    "2011": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3735,
        4762
      ],
      "op": "POP",
      "path": "5"
    },
    "2012": {
      "fn": "Oracle.oracleRequest",
      "jump": "o",
      "offset": [
        3735,
        4762
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2013": {
      "offset": [
        669,
        695
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2014": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        669,
        695
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2016": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        669,
        695
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2017": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        669,
        695
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2018": {
      "fn": "Oracle.oracleRequest",
      "jump": "o",
      "offset": [
        669,
        695
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2019": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2020": {
      "offset": [
        10312,
        10322
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2021": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5886,
        5890
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2023": {
      "offset": [
        10296,
        10323
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2024": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10296,
        10323
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2025": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10296,
        10323
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2026": {
      "offset": [
        10296,
        10311
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2028": {
      "offset": [
        10296,
        10323
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2030": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10296,
        10323
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2031": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10296,
        10323
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2033": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10296,
        10323
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2034": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10296,
        10323
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2035": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10296,
        10323
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2036": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5886,
        5890
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2037": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5886,
        5890
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2038": {
      "offset": [
        10296,
        10323
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2040": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10296,
        10323
      ],
      "op": "AND",
      "path": "5"
    },
    "2041": {
      "branch": 35,
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10296,
        10323
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2042": {
      "offset": [
        10296,
        10346
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x80D"
    },
    "2045": {
      "branch": 35,
      "offset": [
        10296,
        10346
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2046": {
      "op": "POP"
    },
    "2047": {
      "offset": [
        10341,
        10346
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2049": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10341,
        10346
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2056": {
      "op": "EXP"
    },
    "2057": {
      "op": "SUB"
    },
    "2058": {
      "offset": [
        10341,
        10346
      ],
      "op": "AND",
      "path": "5"
    },
    "2059": {
      "offset": [
        10327,
        10337
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2060": {
      "offset": [
        10327,
        10346
      ],
      "op": "EQ",
      "path": "5"
    },
    "2061": {
      "offset": [
        10296,
        10346
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2062": {
      "offset": [
        10288,
        10393
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2063": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2064": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x889"
    },
    "2067": {
      "offset": [
        10288,
        10393
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2068": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2070": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2071": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2076": {
      "op": "EXP"
    },
    "2077": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2081": {
      "op": "MUL"
    },
    "2082": {
      "offset": [
        10288,
        10393
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2083": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2084": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2086": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2088": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2089": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "ADD",
      "path": "5"
    },
    "2090": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2091": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "2093": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "2095": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2096": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "ADD",
      "path": "5"
    },
    "2097": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2098": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4E6F7420616E20617574686F72697A6564206E6F646520746F2066756C66696C"
    },
    "2131": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "2133": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2134": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "ADD",
      "path": "5"
    },
    "2135": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2136": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x6C20726571756573747300000000000000000000000000000000000000000000"
    },
    "2169": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "2171": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2172": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "ADD",
      "path": "5"
    },
    "2173": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2174": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2175": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2176": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2177": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2178": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2179": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "SUB",
      "path": "5"
    },
    "2180": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x84"
    },
    "2182": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "ADD",
      "path": "5"
    },
    "2183": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2184": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2185": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10288,
        10393
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2186": {
      "offset": [
        10092,
        10115
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2188": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10092,
        10115
      ],
      "op": "DUP9",
      "path": "5"
    },
    "2189": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10092,
        10115
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2190": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10092,
        10115
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2191": {
      "offset": [
        10092,
        10103
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2193": {
      "offset": [
        10092,
        10115
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2195": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10092,
        10115
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2196": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10092,
        10115
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2198": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10092,
        10115
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2199": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10092,
        10115
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2200": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10092,
        10115
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2201": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5861,
        5871
      ],
      "op": "DUP9",
      "path": "5"
    },
    "2202": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5861,
        5871
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2203": {
      "offset": [
        10092,
        10120
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2204": {
      "branch": 36,
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10092,
        10120
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2205": {
      "offset": [
        10084,
        10152
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F0"
    },
    "2208": {
      "branch": 36,
      "offset": [
        10084,
        10152
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2209": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2211": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2212": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2217": {
      "op": "EXP"
    },
    "2218": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2222": {
      "op": "MUL"
    },
    "2223": {
      "offset": [
        10084,
        10152
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2224": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2225": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2227": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2229": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2230": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "ADD",
      "path": "5"
    },
    "2231": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2232": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1B"
    },
    "2234": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "2236": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2237": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "ADD",
      "path": "5"
    },
    "2238": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2239": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4D757374206861766520612076616C6964207265717565737449640000000000"
    },
    "2272": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "2274": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2275": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "ADD",
      "path": "5"
    },
    "2276": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2277": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2278": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2279": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2280": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2281": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2282": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "SUB",
      "path": "5"
    },
    "2283": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "2285": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "ADD",
      "path": "5"
    },
    "2286": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2287": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2288": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10084,
        10152
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2289": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2291": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2292": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2293": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2295": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2296": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2297": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "ADD",
      "path": "5"
    },
    "2298": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP12",
      "path": "5"
    },
    "2299": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2300": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2301": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "PUSH13",
      "path": "5",
      "value": "0x1000000000000000000000000"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2321": {
      "op": "EXP"
    },
    "2322": {
      "op": "SUB"
    },
    "2323": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP12",
      "path": "5"
    },
    "2324": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "AND",
      "path": "5"
    },
    "2325": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "MUL",
      "path": "5"
    },
    "2326": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2327": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2328": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "ADD",
      "path": "5"
    },
    "2329": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2336": {
      "op": "EXP"
    },
    "2337": {
      "op": "SUB"
    },
    "2338": {
      "op": "NOT"
    },
    "2339": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP10",
      "path": "5"
    },
    "2340": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "AND",
      "path": "5"
    },
    "2341": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x54"
    },
    "2343": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2344": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "ADD",
      "path": "5"
    },
    "2345": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2346": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x58"
    },
    "2348": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2349": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2350": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "ADD",
      "path": "5"
    },
    "2351": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP10",
      "path": "5"
    },
    "2352": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2353": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2354": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2355": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2356": {
      "op": "DUP1"
    },
    "2357": {
      "op": "DUP5"
    },
    "2358": {
      "op": "SUB"
    },
    "2359": {
      "op": "SWAP1"
    },
    "2360": {
      "op": "SWAP2"
    },
    "2361": {
      "op": "ADD"
    },
    "2362": {
      "op": "DUP2"
    },
    "2363": {
      "op": "MSTORE"
    },
    "2364": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x78"
    },
    "2366": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2367": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2368": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "ADD",
      "path": "5"
    },
    "2369": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2370": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2371": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2372": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2373": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2374": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2375": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2376": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2377": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2378": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2379": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2380": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2381": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "ADD",
      "path": "5"
    },
    "2382": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2383": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2384": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5938,
        6056
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2385": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2386": {
      "op": "JUMPDEST"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2389": {
      "op": "DUP4"
    },
    "2390": {
      "op": "LT"
    },
    "2391": {
      "op": "PUSH2",
      "value": "0x971"
    },
    "2394": {
      "op": "JUMPI"
    },
    "2395": {
      "op": "DUP1"
    },
    "2396": {
      "op": "MLOAD"
    },
    "2397": {
      "op": "DUP3"
    },
    "2398": {
      "op": "MSTORE"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2401": {
      "op": "NOT"
    },
    "2402": {
      "op": "SWAP1"
    },
    "2403": {
      "op": "SWAP3"
    },
    "2404": {
      "op": "ADD"
    },
    "2405": {
      "op": "SWAP2"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2408": {
      "op": "SWAP2"
    },
    "2409": {
      "op": "DUP3"
    },
    "2410": {
      "op": "ADD"
    },
    "2411": {
      "op": "SWAP2"
    },
    "2412": {
      "op": "ADD"
    },
    "2413": {
      "op": "PUSH2",
      "value": "0x952"
    },
    "2416": {
      "op": "JUMP"
    },
    "2417": {
      "op": "JUMPDEST"
    },
    "2418": {
      "op": "MLOAD"
    },
    "2419": {
      "op": "DUP2"
    },
    "2420": {
      "op": "MLOAD"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2423": {
      "op": "SWAP4"
    },
    "2424": {
      "op": "DUP5"
    },
    "2425": {
      "op": "SUB"
    },
    "2426": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2429": {
      "op": "EXP"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2432": {
      "op": "NOT"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "op": "DUP1"
    },
    "2435": {
      "op": "NOT"
    },
    "2436": {
      "op": "SWAP1"
    },
    "2437": {
      "op": "SWAP3"
    },
    "2438": {
      "op": "AND"
    },
    "2439": {
      "op": "SWAP2"
    },
    "2440": {
      "op": "AND"
    },
    "2441": {
      "op": "OR"
    },
    "2442": {
      "op": "SWAP1"
    },
    "2443": {
      "op": "MSTORE"
    },
    "2444": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2446": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2447": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2448": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2449": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2450": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2451": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "ADD",
      "path": "5"
    },
    "2452": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2453": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2454": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "SUB",
      "path": "5"
    },
    "2455": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2456": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2457": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2460": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6081,
        6104
      ],
      "op": "DUP16",
      "path": "5",
      "statement": 7
    },
    "2461": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6081,
        6104
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2462": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6081,
        6104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2463": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6081,
        6092
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2465": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6081,
        6104
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2466": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6081,
        6104
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2467": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6081,
        6104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2468": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6081,
        6104
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2469": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6081,
        6104
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2470": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6081,
        6104
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2471": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6081,
        6104
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2472": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2473": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5921,
        6062
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "2474": {
      "op": "POP"
    },
    "2475": {
      "op": "POP"
    },
    "2476": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6081,
        6118
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2477": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6081,
        6118
      ],
      "op": "EQ",
      "path": "5"
    },
    "2478": {
      "branch": 37,
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6081,
        6118
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2479": {
      "op": "POP"
    },
    "2480": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA05"
    },
    "2483": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2484": {
      "op": "POP"
    },
    "2485": {
      "branch": 37,
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2486": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2488": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2489": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2494": {
      "op": "EXP"
    },
    "2495": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2499": {
      "op": "MUL"
    },
    "2500": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2501": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2502": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2504": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2506": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2507": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "ADD",
      "path": "5"
    },
    "2508": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2509": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1E"
    },
    "2511": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "2513": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2514": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "ADD",
      "path": "5"
    },
    "2515": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2516": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x506172616D7320646F206E6F74206D6174636820726571756573742049440000"
    },
    "2549": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "2551": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2552": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "ADD",
      "path": "5"
    },
    "2553": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2554": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2555": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2556": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2557": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2558": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2559": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "SUB",
      "path": "5"
    },
    "2560": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "2562": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "ADD",
      "path": "5"
    },
    "2563": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2564": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2565": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6073,
        6153
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2566": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6180,
        6198
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 8,
      "value": "0x7"
    },
    "2568": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6180,
        6198
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2569": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6180,
        6212
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA18"
    },
    "2572": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6180,
        6212
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2573": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6203,
        6211
      ],
      "op": "DUP10",
      "path": "5"
    },
    "2574": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6180,
        6212
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "2579": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6180,
        6202
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x121E"
    },
    "2582": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6180,
        6212
      ],
      "op": "AND",
      "path": "5"
    },
    "2583": {
      "fn": "Oracle.fulfillOracleRequest",
      "jump": "i",
      "offset": [
        6180,
        6212
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2584": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6180,
        6212
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2585": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6159,
        6177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "2587": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6159,
        6212
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2588": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6225,
        6248
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 9,
      "value": "0x0"
    },
    "2590": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6225,
        6248
      ],
      "op": "DUP10",
      "path": "5"
    },
    "2591": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6225,
        6248
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2592": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6225,
        6248
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2593": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6225,
        6236
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2595": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6225,
        6248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2597": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6225,
        6248
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2598": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6225,
        6248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2600": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6225,
        6248
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2601": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6225,
        6248
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2602": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6218,
        6248
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2603": {
      "offset": [
        902,
        908
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x61A80"
    },
    "2607": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6262,
        6271
      ],
      "op": "GAS",
      "path": "5",
      "statement": 10
    },
    "2608": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6262,
        6301
      ],
      "op": "LT",
      "path": "5"
    },
    "2609": {
      "branch": 38,
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6262,
        6301
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2610": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA85"
    },
    "2613": {
      "branch": 38,
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2614": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2616": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2617": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2622": {
      "op": "EXP"
    },
    "2623": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2627": {
      "op": "MUL"
    },
    "2628": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2629": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2630": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2632": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2634": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2635": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "ADD",
      "path": "5"
    },
    "2636": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2637": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2638": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2639": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "2641": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2642": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "ADD",
      "path": "5"
    },
    "2643": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2644": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4D7573742070726F7669646520636F6E73756D657220656E6F75676820676173"
    },
    "2677": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "2679": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2680": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "ADD",
      "path": "5"
    },
    "2681": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2682": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2683": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2684": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2685": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2686": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2687": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "SUB",
      "path": "5"
    },
    "2688": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "2690": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "ADD",
      "path": "5"
    },
    "2691": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2692": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2693": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6254,
        6338
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2694": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 11,
      "value": "0x40"
    },
    "2696": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2697": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2698": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2707": {
      "op": "EXP"
    },
    "2708": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2709": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DUP11",
      "path": "5"
    },
    "2710": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DIV",
      "path": "5"
    },
    "2711": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2712": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2713": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "AND",
      "path": "5"
    },
    "2714": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "MUL",
      "path": "5"
    },
    "2715": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2716": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2717": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2719": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2720": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "ADD",
      "path": "5"
    },
    "2721": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DUP13",
      "path": "5"
    },
    "2722": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2723": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2724": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "2726": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2727": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "ADD",
      "path": "5"
    },
    "2728": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2729": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2730": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2731": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2732": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2739": {
      "op": "EXP"
    },
    "2740": {
      "op": "SUB"
    },
    "2741": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6631
      ],
      "op": "DUP11",
      "path": "5"
    },
    "2742": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6631
      ],
      "op": "AND",
      "path": "5"
    },
    "2743": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6631
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2744": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2745": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "2747": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2748": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2749": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "ADD",
      "path": "5"
    },
    "2750": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2751": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2753": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2754": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2755": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2756": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2757": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2758": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2759": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "SUB",
      "path": "5"
    },
    "2760": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "ADD",
      "path": "5"
    },
    "2761": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2762": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2763": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6631
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2764": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "GAS",
      "path": "5"
    },
    "2765": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "CALL",
      "path": "5"
    },
    "2766": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        6610,
        6671
      ],
      "op": "SWAP13",
      "path": "5"
    },
    "2767": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5620,
        6722
      ],
      "op": "SWAP12",
      "path": "5"
    },
    "2768": {
      "op": "POP"
    },
    "2769": {
      "op": "POP"
    },
    "2770": {
      "op": "POP"
    },
    "2771": {
      "op": "POP"
    },
    "2772": {
      "op": "POP"
    },
    "2773": {
      "op": "POP"
    },
    "2774": {
      "op": "POP"
    },
    "2775": {
      "op": "POP"
    },
    "2776": {
      "op": "POP"
    },
    "2777": {
      "op": "POP"
    },
    "2778": {
      "op": "POP"
    },
    "2779": {
      "op": "POP"
    },
    "2780": {
      "fn": "Oracle.fulfillOracleRequest",
      "jump": "o",
      "offset": [
        5620,
        6722
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2781": {
      "offset": [
        797,
        844
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2782": {
      "offset": [
        835,
        844
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12C"
    },
    "2785": {
      "offset": [
        797,
        844
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2786": {
      "fn": "Oracle.fulfillOracleRequest",
      "jump": "o",
      "offset": [
        797,
        844
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2787": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8201,
        8336
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2788": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8258,
        8265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2790": {
      "offset": [
        719,
        724
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2791": {
      "fn": "Oracle.withdrawable",
      "offset": [
        719,
        724
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2798": {
      "op": "EXP"
    },
    "2799": {
      "op": "SUB"
    },
    "2800": {
      "offset": [
        719,
        724
      ],
      "op": "AND",
      "path": "3"
    },
    "2801": {
      "offset": [
        705,
        715
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2802": {
      "offset": [
        705,
        724
      ],
      "op": "EQ",
      "path": "3"
    },
    "2803": {
      "offset": [
        697,
        725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFB"
    },
    "2806": {
      "offset": [
        697,
        725
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2807": {
      "fn": "Oracle.withdrawable",
      "offset": [
        697,
        725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2809": {
      "fn": "Oracle.withdrawable",
      "offset": [
        697,
        725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2810": {
      "fn": "Oracle.withdrawable",
      "offset": [
        697,
        725
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2811": {
      "fn": "Oracle.withdrawable",
      "offset": [
        697,
        725
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2812": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8280,
        8298
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 12,
      "value": "0x7"
    },
    "2814": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8280,
        8298
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2815": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8280,
        8331
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB0F"
    },
    "2818": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8280,
        8331
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2819": {
      "offset": [
        1069,
        1070
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2821": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8280,
        8331
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "2826": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8280,
        8302
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1231"
    },
    "2829": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8280,
        8331
      ],
      "op": "AND",
      "path": "5"
    },
    "2830": {
      "fn": "Oracle.withdrawable",
      "jump": "i",
      "offset": [
        8280,
        8331
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2831": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8280,
        8331
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2832": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8273,
        8331
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2833": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8273,
        8331
      ],
      "op": "POP",
      "path": "5"
    },
    "2834": {
      "fn": "Oracle.withdrawable",
      "offset": [
        8201,
        8336
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2835": {
      "fn": "Oracle.withdrawable",
      "jump": "o",
      "offset": [
        8201,
        8336
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2836": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2837": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2839": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2840": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2841": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2843": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2844": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2845": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "ADD",
      "path": "5"
    },
    "2846": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2847": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2848": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2849": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "PUSH13",
      "path": "5",
      "value": "0x1000000000000000000000000"
    },
    "2863": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9130,
        9140
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2864": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "MUL",
      "path": "5"
    },
    "2865": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2866": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2867": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "ADD",
      "path": "5"
    },
    "2868": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2875": {
      "op": "EXP"
    },
    "2876": {
      "op": "SUB"
    },
    "2877": {
      "op": "NOT"
    },
    "2878": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2879": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "AND",
      "path": "5"
    },
    "2880": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x54"
    },
    "2882": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2883": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "ADD",
      "path": "5"
    },
    "2884": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2885": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x58"
    },
    "2887": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2888": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2889": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "ADD",
      "path": "5"
    },
    "2890": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2891": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2892": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2893": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2894": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2895": {
      "op": "DUP1"
    },
    "2896": {
      "op": "DUP5"
    },
    "2897": {
      "op": "SUB"
    },
    "2898": {
      "op": "SWAP1"
    },
    "2899": {
      "op": "SWAP2"
    },
    "2900": {
      "op": "ADD"
    },
    "2901": {
      "op": "DUP2"
    },
    "2902": {
      "op": "MSTORE"
    },
    "2903": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x78"
    },
    "2905": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2906": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2907": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "ADD",
      "path": "5"
    },
    "2908": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2909": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2910": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2911": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2912": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2913": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2914": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9048,
        9066
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2916": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9048,
        9066
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2917": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2918": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2919": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2920": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2921": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2922": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "ADD",
      "path": "5"
    },
    "2923": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2924": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2925": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9086,
        9185
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2926": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2927": {
      "op": "JUMPDEST"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2930": {
      "op": "DUP4"
    },
    "2931": {
      "op": "LT"
    },
    "2932": {
      "op": "PUSH2",
      "value": "0xB8E"
    },
    "2935": {
      "op": "JUMPI"
    },
    "2936": {
      "op": "DUP1"
    },
    "2937": {
      "op": "MLOAD"
    },
    "2938": {
      "op": "DUP3"
    },
    "2939": {
      "op": "MSTORE"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2942": {
      "op": "NOT"
    },
    "2943": {
      "op": "SWAP1"
    },
    "2944": {
      "op": "SWAP3"
    },
    "2945": {
      "op": "ADD"
    },
    "2946": {
      "op": "SWAP2"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2949": {
      "op": "SWAP2"
    },
    "2950": {
      "op": "DUP3"
    },
    "2951": {
      "op": "ADD"
    },
    "2952": {
      "op": "SWAP2"
    },
    "2953": {
      "op": "ADD"
    },
    "2954": {
      "op": "PUSH2",
      "value": "0xB6F"
    },
    "2957": {
      "op": "JUMP"
    },
    "2958": {
      "op": "JUMPDEST"
    },
    "2959": {
      "op": "MLOAD"
    },
    "2960": {
      "op": "DUP2"
    },
    "2961": {
      "op": "MLOAD"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2964": {
      "op": "SWAP4"
    },
    "2965": {
      "op": "DUP5"
    },
    "2966": {
      "op": "SUB"
    },
    "2967": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2970": {
      "op": "EXP"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2973": {
      "op": "NOT"
    },
    "2974": {
      "op": "ADD"
    },
    "2975": {
      "op": "DUP1"
    },
    "2976": {
      "op": "NOT"
    },
    "2977": {
      "op": "SWAP1"
    },
    "2978": {
      "op": "SWAP3"
    },
    "2979": {
      "op": "AND"
    },
    "2980": {
      "op": "SWAP2"
    },
    "2981": {
      "op": "AND"
    },
    "2982": {
      "op": "OR"
    },
    "2983": {
      "op": "SWAP1"
    },
    "2984": {
      "op": "MSTORE"
    },
    "2985": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2987": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2988": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2989": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2990": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2991": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2992": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "ADD",
      "path": "5"
    },
    "2993": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2994": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2995": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "SUB",
      "path": "5"
    },
    "2996": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2997": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2998": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3001": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9219,
        9242
      ],
      "op": "DUP12",
      "path": "5",
      "statement": 13
    },
    "3002": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9219,
        9242
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3003": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9219,
        9242
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3004": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9219,
        9230
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3006": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9219,
        9242
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3007": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9219,
        9242
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3008": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9219,
        9242
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3009": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9219,
        9242
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3010": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9219,
        9242
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3011": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9219,
        9242
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3012": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9219,
        9242
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3013": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3014": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9069,
        9191
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3015": {
      "op": "POP"
    },
    "3016": {
      "op": "POP"
    },
    "3017": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9205,
        9242
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3018": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9205,
        9242
      ],
      "op": "EQ",
      "path": "5"
    },
    "3019": {
      "branch": 39,
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9205,
        9242
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3020": {
      "op": "POP"
    },
    "3021": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC22"
    },
    "3024": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3025": {
      "op": "POP"
    },
    "3026": {
      "branch": 39,
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3027": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3029": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3030": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3035": {
      "op": "EXP"
    },
    "3036": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3040": {
      "op": "MUL"
    },
    "3041": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3042": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3043": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3045": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3047": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3048": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "ADD",
      "path": "5"
    },
    "3049": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3050": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1E"
    },
    "3052": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "3054": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3055": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "ADD",
      "path": "5"
    },
    "3056": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3057": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x506172616D7320646F206E6F74206D6174636820726571756573742049440000"
    },
    "3090": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "3092": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3093": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "ADD",
      "path": "5"
    },
    "3094": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3095": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3096": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3097": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3098": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3099": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3100": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "SUB",
      "path": "5"
    },
    "3101": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "3103": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "ADD",
      "path": "5"
    },
    "3104": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3105": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3106": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9197,
        9277
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3107": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9356,
        9359
      ],
      "op": "TIMESTAMP",
      "path": "5",
      "statement": 14
    },
    "3108": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9341,
        9359
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3109": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9341,
        9359
      ],
      "op": "GT",
      "path": "5"
    },
    "3110": {
      "branch": 40,
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9341,
        9359
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3111": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC7A"
    },
    "3114": {
      "branch": 40,
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3115": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3117": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3118": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3123": {
      "op": "EXP"
    },
    "3124": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3128": {
      "op": "MUL"
    },
    "3129": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3130": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3131": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3133": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3135": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3136": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "ADD",
      "path": "5"
    },
    "3137": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3138": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x16"
    },
    "3140": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "3142": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3143": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "ADD",
      "path": "5"
    },
    "3144": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3145": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x52657175657374206973206E6F74206578706972656400000000000000000000"
    },
    "3178": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "3180": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3181": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "ADD",
      "path": "5"
    },
    "3182": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3183": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3184": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3185": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3186": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3187": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3188": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "SUB",
      "path": "5"
    },
    "3189": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "3191": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "ADD",
      "path": "5"
    },
    "3192": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3193": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3194": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9333,
        9386
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3195": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9400,
        9423
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 15,
      "value": "0x0"
    },
    "3197": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9400,
        9423
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3198": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9400,
        9423
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3199": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9400,
        9423
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3200": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9400,
        9411
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3202": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9400,
        9423
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3204": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9400,
        9423
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3205": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9400,
        9423
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3207": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9400,
        9423
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3208": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9400,
        9423
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3209": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9400,
        9423
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3210": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9393,
        9423
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3211": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9393,
        9423
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3212": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9393,
        9423
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3213": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9434,
        9465
      ],
      "op": "MLOAD",
      "path": "5",
      "statement": 16
    },
    "3214": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9412,
        9422
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3215": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9412,
        9422
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3216": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9434,
        9465
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xA7842B9EC549398102C0D91B1B9919B2F20558AEFDADF57528A95C6CD3292E93"
    },
    "3249": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9434,
        9465
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3250": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9434,
        9465
      ],
      "op": "LOG2",
      "path": "5"
    },
    "3251": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9488
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 17,
      "value": "0x4"
    },
    "3253": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9488
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3254": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9488
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3255": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3257": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3258": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3259": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xA9059CBB00000000000000000000000000000000000000000000000000000000"
    },
    "3292": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3293": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3294": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9498,
        9508
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3295": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3296": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3297": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "ADD",
      "path": "5"
    },
    "3298": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3299": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3300": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3301": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3302": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "3304": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3305": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "ADD",
      "path": "5"
    },
    "3306": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3307": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3308": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3309": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3316": {
      "op": "EXP"
    },
    "3317": {
      "op": "SUB"
    },
    "3318": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9488
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3319": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9488
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3320": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9488
      ],
      "op": "AND",
      "path": "5"
    },
    "3321": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9488
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3322": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9497
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA9059CBB"
    },
    "3327": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9497
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3328": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "3330": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3331": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3332": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "ADD",
      "path": "5"
    },
    "3333": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3334": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3336": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3337": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3338": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3339": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3340": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3341": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "SUB",
      "path": "5"
    },
    "3342": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "ADD",
      "path": "5"
    },
    "3343": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3344": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9488
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3346": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9488
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3347": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3348": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "3349": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3350": {
      "op": "DUP1"
    },
    "3351": {
      "op": "ISZERO"
    },
    "3352": {
      "op": "PUSH2",
      "value": "0xD20"
    },
    "3355": {
      "op": "JUMPI"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3358": {
      "op": "DUP1"
    },
    "3359": {
      "op": "REVERT"
    },
    "3360": {
      "op": "JUMPDEST"
    },
    "3361": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "POP",
      "path": "5"
    },
    "3362": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "GAS",
      "path": "5"
    },
    "3363": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "CALL",
      "path": "5"
    },
    "3364": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3365": {
      "op": "DUP1"
    },
    "3366": {
      "op": "ISZERO"
    },
    "3367": {
      "op": "PUSH2",
      "value": "0xD34"
    },
    "3370": {
      "op": "JUMPI"
    },
    "3371": {
      "op": "RETURNDATASIZE"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3374": {
      "op": "DUP1"
    },
    "3375": {
      "op": "RETURNDATACOPY"
    },
    "3376": {
      "op": "RETURNDATASIZE"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3379": {
      "op": "REVERT"
    },
    "3380": {
      "op": "JUMPDEST"
    },
    "3381": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "POP",
      "path": "5"
    },
    "3382": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "POP",
      "path": "5"
    },
    "3383": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "POP",
      "path": "5"
    },
    "3384": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "POP",
      "path": "5"
    },
    "3385": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3387": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3388": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3391": {
      "op": "DUP2"
    },
    "3392": {
      "op": "LT"
    },
    "3393": {
      "op": "ISZERO"
    },
    "3394": {
      "op": "PUSH2",
      "value": "0xD4A"
    },
    "3397": {
      "op": "JUMPI"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3400": {
      "op": "DUP1"
    },
    "3401": {
      "op": "REVERT"
    },
    "3402": {
      "op": "JUMPDEST"
    },
    "3403": {
      "op": "POP"
    },
    "3404": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9479,
        9519
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3405": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9472,
        9520
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3406": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9472,
        9520
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3407": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9472,
        9520
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD54"
    },
    "3410": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9472,
        9520
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3411": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9472,
        9520
      ],
      "op": "INVALID",
      "path": "5"
    },
    "3412": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9472,
        9520
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3413": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "POP",
      "path": "5"
    },
    "3414": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "POP",
      "path": "5"
    },
    "3415": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "POP",
      "path": "5"
    },
    "3416": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "POP",
      "path": "5"
    },
    "3417": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8903,
        9525
      ],
      "op": "POP",
      "path": "5"
    },
    "3418": {
      "fn": "Oracle.cancelOracleRequest",
      "jump": "o",
      "offset": [
        8903,
        9525
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3419": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1001,
        1112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3420": {
      "offset": [
        719,
        724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3422": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        719,
        724
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3429": {
      "op": "EXP"
    },
    "3430": {
      "op": "SUB"
    },
    "3431": {
      "offset": [
        719,
        724
      ],
      "op": "AND",
      "path": "3"
    },
    "3432": {
      "offset": [
        705,
        715
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3433": {
      "offset": [
        705,
        724
      ],
      "op": "EQ",
      "path": "3"
    },
    "3434": {
      "offset": [
        697,
        725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD72"
    },
    "3437": {
      "offset": [
        697,
        725
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3438": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        697,
        725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3440": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        697,
        725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3441": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        697,
        725
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3442": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        697,
        725
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3443": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1077,
        1082
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 18,
      "value": "0x0"
    },
    "3445": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1077,
        1082
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3446": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1077,
        1082
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3447": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1058,
        1083
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3449": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1058,
        1083
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3456": {
      "op": "EXP"
    },
    "3457": {
      "op": "SUB"
    },
    "3458": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1077,
        1082
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3459": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1077,
        1082
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3460": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1077,
        1082
      ],
      "op": "AND",
      "path": "3"
    },
    "3461": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1077,
        1082
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3462": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1058,
        1083
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
    },
    "3495": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1058,
        1083
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3496": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1058,
        1083
      ],
      "op": "LOG2",
      "path": "3"
    },
    "3497": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1105,
        1106
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 19,
      "value": "0x0"
    },
    "3499": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1089,
        1107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3500": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1089,
        1107
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3501": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3522": {
      "op": "NOT"
    },
    "3523": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1089,
        1107
      ],
      "op": "AND",
      "path": "3"
    },
    "3524": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1089,
        1107
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3525": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1089,
        1107
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3526": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1001,
        1112
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3527": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7286,
        7413
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3528": {
      "offset": [
        719,
        724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3530": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        719,
        724
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3537": {
      "op": "EXP"
    },
    "3538": {
      "op": "SUB"
    },
    "3539": {
      "offset": [
        719,
        724
      ],
      "op": "AND",
      "path": "3"
    },
    "3540": {
      "offset": [
        705,
        715
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3541": {
      "offset": [
        705,
        724
      ],
      "op": "EQ",
      "path": "3"
    },
    "3542": {
      "offset": [
        697,
        725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDDE"
    },
    "3545": {
      "offset": [
        697,
        725
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3546": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        697,
        725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3548": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        697,
        725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3549": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        697,
        725
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3550": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        697,
        725
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3557": {
      "op": "EXP"
    },
    "3558": {
      "op": "SUB"
    },
    "3559": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7397
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 20
    },
    "3560": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7397
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3561": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7397
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3562": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7397
      ],
      "op": "AND",
      "path": "5"
    },
    "3563": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3565": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7397
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3566": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3567": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7397
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3568": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7390
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "3570": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3572": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7397
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3573": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3575": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7397
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3576": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7397
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3577": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7408
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3578": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7408
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3581": {
      "op": "NOT"
    },
    "3582": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7408
      ],
      "op": "AND",
      "path": "5"
    },
    "3583": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7408
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3584": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7408
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3585": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7408
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3586": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7408
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3587": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7408
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3588": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7408
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3589": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7408
      ],
      "op": "OR",
      "path": "5"
    },
    "3590": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7408
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3591": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        7375,
        7408
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3592": {
      "fn": "Oracle.setFulfillmentPermission",
      "jump": "o",
      "offset": [
        7286,
        7413
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3593": {
      "offset": [
        1320,
        1366
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3594": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3596": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3598": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3599": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3601": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3602": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3603": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3604": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3606": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3607": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3608": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3609": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1320,
        1366
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3610": {
      "fn": "Oracle.setFulfillmentPermission",
      "jump": "o",
      "offset": [
        1320,
        1366
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3611": {
      "offset": [
        238,
        258
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3612": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        238,
        258
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3614": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        238,
        258
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3621": {
      "op": "EXP"
    },
    "3622": {
      "op": "SUB"
    },
    "3623": {
      "offset": [
        238,
        258
      ],
      "op": "AND",
      "path": "3"
    },
    "3624": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        238,
        258
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3625": {
      "fn": "Oracle.setFulfillmentPermission",
      "jump": "o",
      "offset": [
        238,
        258
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3626": {
      "offset": [
        733,
        765
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3627": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3629": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3630": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "PUSH21",
      "path": "5",
      "value": "0x10000000000000000000000000000000000000000"
    },
    "3652": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3653": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "DIV",
      "path": "5"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3658": {
      "op": "EXP"
    },
    "3659": {
      "offset": [
        733,
        765
      ],
      "op": "MUL",
      "path": "5"
    },
    "3660": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        733,
        765
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3661": {
      "fn": "Oracle.setFulfillmentPermission",
      "jump": "o",
      "offset": [
        733,
        765
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3662": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3663": {
      "offset": [
        10527,
        10536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3665": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10527,
        10536
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3672": {
      "op": "EXP"
    },
    "3673": {
      "op": "SUB"
    },
    "3674": {
      "offset": [
        10527,
        10536
      ],
      "op": "AND",
      "path": "5"
    },
    "3675": {
      "offset": [
        10505,
        10515
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3676": {
      "offset": [
        10505,
        10537
      ],
      "op": "EQ",
      "path": "5"
    },
    "3677": {
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEB0"
    },
    "3680": {
      "offset": [
        10497,
        10561
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3681": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3683": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3684": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3689": {
      "op": "EXP"
    },
    "3690": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3694": {
      "op": "MUL"
    },
    "3695": {
      "offset": [
        10497,
        10561
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3696": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3697": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3699": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3701": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3702": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "ADD",
      "path": "5"
    },
    "3703": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3704": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "3706": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "3708": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3709": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "ADD",
      "path": "5"
    },
    "3710": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3711": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4D75737420757365204C494E4B20746F6B656E00000000000000000000000000"
    },
    "3744": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "3746": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3747": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "ADD",
      "path": "5"
    },
    "3748": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3749": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3750": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3751": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3752": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3753": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3754": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "SUB",
      "path": "5"
    },
    "3755": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "3757": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "ADD",
      "path": "5"
    },
    "3758": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3759": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3760": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10497,
        10561
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3761": {
      "offset": [
        11441,
        11453
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3762": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11441,
        11453
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3763": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2659,
        2664
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3764": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2659,
        2664
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3765": {
      "offset": [
        1227,
        1274
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "3767": {
      "op": "GT"
    },
    "3768": {
      "offset": [
        11441,
        11479
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3769": {
      "offset": [
        11433,
        11506
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF0C"
    },
    "3772": {
      "offset": [
        11433,
        11506
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3773": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3775": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3776": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3781": {
      "op": "EXP"
    },
    "3782": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3786": {
      "op": "MUL"
    },
    "3787": {
      "offset": [
        11433,
        11506
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3788": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3789": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3791": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3793": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3794": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "ADD",
      "path": "5"
    },
    "3795": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3796": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x16"
    },
    "3798": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "3800": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3801": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "ADD",
      "path": "5"
    },
    "3802": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3803": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x496E76616C69642072657175657374206C656E67746800000000000000000000"
    },
    "3836": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "3838": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3839": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "ADD",
      "path": "5"
    },
    "3840": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3841": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3842": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3843": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3844": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3845": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3846": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "SUB",
      "path": "5"
    },
    "3847": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "3849": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "ADD",
      "path": "5"
    },
    "3850": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3851": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3852": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11433,
        11506
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3853": {
      "offset": [
        10905,
        10907
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3855": {
      "offset": [
        10894,
        10908
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3856": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10894,
        10908
      ],
      "op": "ADD",
      "path": "5"
    },
    "3857": {
      "offset": [
        10888,
        10909
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3858": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2696,
        2701
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3859": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2696,
        2701
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3866": {
      "op": "EXP"
    },
    "3867": {
      "op": "SUB"
    },
    "3868": {
      "op": "NOT"
    },
    "3869": {
      "offset": [
        10928,
        10971
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3870": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10928,
        10971
      ],
      "op": "AND",
      "path": "5"
    },
    "3871": {
      "offset": [
        10944,
        10971
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4042994600000000000000000000000000000000000000000000000000000000"
    },
    "3904": {
      "offset": [
        10928,
        10971
      ],
      "op": "EQ",
      "path": "5"
    },
    "3905": {
      "offset": [
        10920,
        11006
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF94"
    },
    "3908": {
      "offset": [
        10920,
        11006
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3909": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3911": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3912": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3917": {
      "op": "EXP"
    },
    "3918": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3922": {
      "op": "MUL"
    },
    "3923": {
      "offset": [
        10920,
        11006
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3924": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3925": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3927": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3929": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3930": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "ADD",
      "path": "5"
    },
    "3931": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3932": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1E"
    },
    "3934": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "3936": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3937": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "ADD",
      "path": "5"
    },
    "3938": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3939": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4D757374207573652077686974656C69737465642066756E6374696F6E730000"
    },
    "3972": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "3974": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3975": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "ADD",
      "path": "5"
    },
    "3976": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3977": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3978": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3979": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3980": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3981": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3982": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "SUB",
      "path": "5"
    },
    "3983": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "3985": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "ADD",
      "path": "5"
    },
    "3986": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3987": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3988": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        10920,
        11006
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3989": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2794,
        2801
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3990": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2789,
        2791
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "3992": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2782,
        2787
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3993": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2778,
        2792
      ],
      "op": "ADD",
      "path": "5"
    },
    "3994": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2771,
        2802
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3995": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2867,
        2874
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3996": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2862,
        2864
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "3998": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2855,
        2860
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3999": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2851,
        2865
      ],
      "op": "ADD",
      "path": "5"
    },
    "4000": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2844,
        2875
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4001": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2992,
        2996
      ],
      "op": "ADDRESS",
      "path": "5",
      "statement": 21
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4008": {
      "op": "EXP"
    },
    "4009": {
      "op": "SUB"
    },
    "4010": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3010
      ],
      "op": "AND",
      "path": "5"
    },
    "4011": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        3011,
        3016
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4012": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4014": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4015": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4016": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4017": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4018": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4019": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4020": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4022": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "ADD",
      "path": "5"
    },
    "4023": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4024": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4025": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4026": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4029": {
      "op": "JUMPDEST"
    },
    "4030": {
      "op": "DUP4"
    },
    "4031": {
      "op": "DUP2"
    },
    "4032": {
      "op": "LT"
    },
    "4033": {
      "op": "ISZERO"
    },
    "4034": {
      "op": "PUSH2",
      "value": "0xFD5"
    },
    "4037": {
      "op": "JUMPI"
    },
    "4038": {
      "op": "DUP2"
    },
    "4039": {
      "op": "DUP2"
    },
    "4040": {
      "op": "ADD"
    },
    "4041": {
      "op": "MLOAD"
    },
    "4042": {
      "op": "DUP4"
    },
    "4043": {
      "op": "DUP3"
    },
    "4044": {
      "op": "ADD"
    },
    "4045": {
      "op": "MSTORE"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4048": {
      "op": "ADD"
    },
    "4049": {
      "op": "PUSH2",
      "value": "0xFBD"
    },
    "4052": {
      "op": "JUMP"
    },
    "4053": {
      "op": "JUMPDEST"
    },
    "4054": {
      "op": "POP"
    },
    "4055": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "POP",
      "path": "5"
    },
    "4056": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "POP",
      "path": "5"
    },
    "4057": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "POP",
      "path": "5"
    },
    "4058": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4059": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "POP",
      "path": "5"
    },
    "4060": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4061": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4062": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "ADD",
      "path": "5"
    },
    "4063": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4064": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "4066": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "AND",
      "path": "5"
    },
    "4067": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4068": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4069": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1002"
    },
    "4072": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4073": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4074": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4075": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "SUB",
      "path": "5"
    },
    "4076": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4077": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4078": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4080": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4081": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4083": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "SUB",
      "path": "5"
    },
    "4084": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "4087": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "EXP",
      "path": "5"
    },
    "4088": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "SUB",
      "path": "5"
    },
    "4089": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "NOT",
      "path": "5"
    },
    "4090": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "AND",
      "path": "5"
    },
    "4091": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4092": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4093": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4095": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "ADD",
      "path": "5"
    },
    "4096": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4097": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "POP",
      "path": "5"
    },
    "4098": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4099": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "POP",
      "path": "5"
    },
    "4100": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4101": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "POP",
      "path": "5"
    },
    "4102": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "POP",
      "path": "5"
    },
    "4103": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4105": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4107": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4108": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4109": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4110": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "SUB",
      "path": "5"
    },
    "4111": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4112": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4113": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "GAS",
      "path": "5"
    },
    "4114": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "DELEGATECALL",
      "path": "5"
    },
    "4115": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4116": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "POP",
      "path": "5"
    },
    "4117": {
      "branch": 41,
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2984,
        3017
      ],
      "op": "POP",
      "path": "5"
    },
    "4118": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4119": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4120": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x106B"
    },
    "4123": {
      "branch": 41,
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4124": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4126": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4127": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4132": {
      "op": "EXP"
    },
    "4133": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4137": {
      "op": "MUL"
    },
    "4138": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4139": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4140": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4142": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4144": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4145": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "ADD",
      "path": "5"
    },
    "4146": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4147": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x18"
    },
    "4149": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "4151": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4152": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "ADD",
      "path": "5"
    },
    "4153": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4154": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x556E61626C6520746F2063726561746520726571756573740000000000000000"
    },
    "4187": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "4189": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4190": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "ADD",
      "path": "5"
    },
    "4191": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4192": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4193": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4194": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4195": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4196": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4197": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "SUB",
      "path": "5"
    },
    "4198": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "4200": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "ADD",
      "path": "5"
    },
    "4201": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4202": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4203": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2976,
        3046
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4204": {
      "offset": [
        11512,
        11513
      ],
      "op": "POP",
      "path": "5"
    },
    "4205": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        11512,
        11513
      ],
      "op": "POP",
      "path": "5"
    },
    "4206": {
      "offset": [
        10567,
        10568
      ],
      "op": "POP",
      "path": "5"
    },
    "4207": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "POP",
      "path": "5"
    },
    "4208": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "POP",
      "path": "5"
    },
    "4209": {
      "fn": "Oracle.onTokenTransfer",
      "offset": [
        2524,
        3074
      ],
      "op": "POP",
      "path": "5"
    },
    "4210": {
      "fn": "Oracle.onTokenTransfer",
      "jump": "o",
      "offset": [
        2524,
        3074
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4211": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6919,
        7035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4218": {
      "op": "EXP"
    },
    "4219": {
      "op": "SUB"
    },
    "4220": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        7008,
        7030
      ],
      "op": "AND",
      "path": "5",
      "statement": 22
    },
    "4221": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6989,
        6993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4223": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        7008,
        7030
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4224": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        7008,
        7030
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4225": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        7008,
        7030
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4226": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        7008,
        7023
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "4228": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        7008,
        7030
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4230": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        7008,
        7030
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4231": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        7008,
        7030
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4233": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        7008,
        7030
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4234": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        7008,
        7030
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4235": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        7008,
        7030
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4236": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        7008,
        7030
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4238": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        7008,
        7030
      ],
      "op": "AND",
      "path": "5"
    },
    "4239": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        7008,
        7030
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4240": {
      "fn": "Oracle.getAuthorizationStatus",
      "jump": "o",
      "offset": [
        6919,
        7035
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4241": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1274,
        1377
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4242": {
      "offset": [
        719,
        724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4244": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        719,
        724
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4251": {
      "op": "EXP"
    },
    "4252": {
      "op": "SUB"
    },
    "4253": {
      "offset": [
        719,
        724
      ],
      "op": "AND",
      "path": "3"
    },
    "4254": {
      "offset": [
        705,
        715
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4255": {
      "offset": [
        705,
        724
      ],
      "op": "EQ",
      "path": "3"
    },
    "4256": {
      "offset": [
        697,
        725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A8"
    },
    "4259": {
      "offset": [
        697,
        725
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4260": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        697,
        725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4262": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        697,
        725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4263": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        697,
        725
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        697,
        725
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1343,
        1372
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 23,
      "value": "0x10B1"
    },
    "4268": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1362,
        1371
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4269": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1343,
        1361
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1243"
    },
    "4272": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1343,
        1372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4273": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1343,
        1372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4274": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1274,
        1377
      ],
      "op": "POP",
      "path": "3"
    },
    "4275": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1274,
        1377
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4276": {
      "fn": "Oracle.withdraw",
      "offset": [
        7728,
        7959
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4277": {
      "offset": [
        719,
        724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4279": {
      "fn": "Oracle.withdraw",
      "offset": [
        719,
        724
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4286": {
      "op": "EXP"
    },
    "4287": {
      "op": "SUB"
    },
    "4288": {
      "offset": [
        719,
        724
      ],
      "op": "AND",
      "path": "3"
    },
    "4289": {
      "offset": [
        705,
        715
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4290": {
      "offset": [
        705,
        724
      ],
      "op": "EQ",
      "path": "3"
    },
    "4291": {
      "offset": [
        697,
        725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10CB"
    },
    "4294": {
      "offset": [
        697,
        725
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4295": {
      "fn": "Oracle.withdraw",
      "offset": [
        697,
        725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4297": {
      "fn": "Oracle.withdraw",
      "offset": [
        697,
        725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4298": {
      "fn": "Oracle.withdraw",
      "offset": [
        697,
        725
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4299": {
      "fn": "Oracle.withdraw",
      "offset": [
        697,
        725
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4300": {
      "fn": "Oracle.withdraw",
      "offset": [
        7832,
        7839
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4301": {
      "offset": [
        9784,
        9824
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10DD"
    },
    "4304": {
      "fn": "Oracle.withdraw",
      "offset": [
        7832,
        7839
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4305": {
      "offset": [
        1069,
        1070
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4307": {
      "offset": [
        9784,
        9824
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "4312": {
      "offset": [
        9784,
        9795
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x121E"
    },
    "4315": {
      "offset": [
        9784,
        9824
      ],
      "op": "AND",
      "path": "5"
    },
    "4316": {
      "fn": "Oracle.withdraw",
      "jump": "i",
      "offset": [
        9784,
        9824
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4317": {
      "fn": "Oracle.withdraw",
      "offset": [
        9784,
        9824
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4318": {
      "offset": [
        9762,
        9780
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "4320": {
      "fn": "Oracle.withdraw",
      "offset": [
        9762,
        9780
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4321": {
      "offset": [
        9762,
        9824
      ],
      "op": "LT",
      "path": "5"
    },
    "4322": {
      "branch": 42,
      "fn": "Oracle.withdraw",
      "offset": [
        9762,
        9824
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4323": {
      "offset": [
        9754,
        9882
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x115C"
    },
    "4326": {
      "branch": 42,
      "offset": [
        9754,
        9882
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4327": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4329": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4330": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4335": {
      "op": "EXP"
    },
    "4336": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4340": {
      "op": "MUL"
    },
    "4341": {
      "offset": [
        9754,
        9882
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4342": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4343": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4345": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4347": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4348": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "ADD",
      "path": "5"
    },
    "4349": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4350": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x35"
    },
    "4352": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "4354": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4355": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "ADD",
      "path": "5"
    },
    "4356": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4357": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x416D6F756E74207265717565737465642069732067726561746572207468616E"
    },
    "4390": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "4392": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4393": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "ADD",
      "path": "5"
    },
    "4394": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4395": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x20776974686472617761626C652062616C616E63650000000000000000000000"
    },
    "4428": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "4430": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4431": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "ADD",
      "path": "5"
    },
    "4432": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4433": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4434": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4435": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4436": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4437": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4438": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "SUB",
      "path": "5"
    },
    "4439": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x84"
    },
    "4441": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "ADD",
      "path": "5"
    },
    "4442": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4443": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4444": {
      "fn": "Oracle.withdraw",
      "offset": [
        9754,
        9882
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4445": {
      "fn": "Oracle.withdraw",
      "offset": [
        7870,
        7888
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 24,
      "value": "0x7"
    },
    "4447": {
      "fn": "Oracle.withdraw",
      "offset": [
        7870,
        7888
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4448": {
      "fn": "Oracle.withdraw",
      "offset": [
        7870,
        7901
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x116F"
    },
    "4451": {
      "fn": "Oracle.withdraw",
      "offset": [
        7870,
        7901
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4452": {
      "fn": "Oracle.withdraw",
      "offset": [
        7893,
        7900
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4453": {
      "fn": "Oracle.withdraw",
      "offset": [
        7870,
        7901
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "4458": {
      "fn": "Oracle.withdraw",
      "offset": [
        7870,
        7892
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1231"
    },
    "4461": {
      "fn": "Oracle.withdraw",
      "offset": [
        7870,
        7901
      ],
      "op": "AND",
      "path": "5"
    },
    "4462": {
      "fn": "Oracle.withdraw",
      "jump": "i",
      "offset": [
        7870,
        7901
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4463": {
      "fn": "Oracle.withdraw",
      "offset": [
        7870,
        7901
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4464": {
      "fn": "Oracle.withdraw",
      "offset": [
        7849,
        7867
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "4466": {
      "fn": "Oracle.withdraw",
      "offset": [
        7849,
        7901
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4467": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7923
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 25,
      "value": "0x4"
    },
    "4469": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4470": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7923
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4471": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4473": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4474": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4475": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xA9059CBB00000000000000000000000000000000000000000000000000000000"
    },
    "4508": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4509": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4514": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4516": {
      "op": "EXP"
    },
    "4517": {
      "op": "SUB"
    },
    "4518": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4519": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4520": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "AND",
      "path": "5"
    },
    "4521": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4522": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4523": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "ADD",
      "path": "5"
    },
    "4524": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4525": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4526": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4527": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4528": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "4530": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4531": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "ADD",
      "path": "5"
    },
    "4532": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4533": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4534": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4535": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4536": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4537": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7923
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4538": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7923
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4539": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4540": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7923
      ],
      "op": "AND",
      "path": "5"
    },
    "4541": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4542": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7932
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA9059CBB"
    },
    "4547": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7932
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4548": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "4550": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4551": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4552": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "ADD",
      "path": "5"
    },
    "4553": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4554": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4556": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4557": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4558": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4559": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4560": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4561": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4562": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "SUB",
      "path": "5"
    },
    "4563": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "ADD",
      "path": "5"
    },
    "4564": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4565": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4567": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7923
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4568": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4569": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "4570": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4571": {
      "op": "DUP1"
    },
    "4572": {
      "op": "ISZERO"
    },
    "4573": {
      "op": "PUSH2",
      "value": "0x11E5"
    },
    "4576": {
      "op": "JUMPI"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4579": {
      "op": "DUP1"
    },
    "4580": {
      "op": "REVERT"
    },
    "4581": {
      "op": "JUMPDEST"
    },
    "4582": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "POP",
      "path": "5"
    },
    "4583": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "GAS",
      "path": "5"
    },
    "4584": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "CALL",
      "path": "5"
    },
    "4585": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4586": {
      "op": "DUP1"
    },
    "4587": {
      "op": "ISZERO"
    },
    "4588": {
      "op": "PUSH2",
      "value": "0x11F9"
    },
    "4591": {
      "op": "JUMPI"
    },
    "4592": {
      "op": "RETURNDATASIZE"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4595": {
      "op": "DUP1"
    },
    "4596": {
      "op": "RETURNDATACOPY"
    },
    "4597": {
      "op": "RETURNDATASIZE"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4600": {
      "op": "REVERT"
    },
    "4601": {
      "op": "JUMPDEST"
    },
    "4602": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "POP",
      "path": "5"
    },
    "4603": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "POP",
      "path": "5"
    },
    "4604": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "POP",
      "path": "5"
    },
    "4605": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "POP",
      "path": "5"
    },
    "4606": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4608": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4609": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4612": {
      "op": "DUP2"
    },
    "4613": {
      "op": "LT"
    },
    "4614": {
      "op": "ISZERO"
    },
    "4615": {
      "op": "PUSH2",
      "value": "0x120F"
    },
    "4618": {
      "op": "JUMPI"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4621": {
      "op": "DUP1"
    },
    "4622": {
      "op": "REVERT"
    },
    "4623": {
      "op": "JUMPDEST"
    },
    "4624": {
      "op": "POP"
    },
    "4625": {
      "fn": "Oracle.withdraw",
      "offset": [
        7914,
        7953
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4626": {
      "fn": "Oracle.withdraw",
      "offset": [
        7907,
        7954
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4627": {
      "fn": "Oracle.withdraw",
      "offset": [
        7907,
        7954
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4628": {
      "fn": "Oracle.withdraw",
      "offset": [
        7907,
        7954
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1219"
    },
    "4631": {
      "fn": "Oracle.withdraw",
      "offset": [
        7907,
        7954
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4632": {
      "fn": "Oracle.withdraw",
      "offset": [
        7907,
        7954
      ],
      "op": "INVALID",
      "path": "5"
    },
    "4633": {
      "fn": "Oracle.withdraw",
      "offset": [
        7907,
        7954
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4634": {
      "offset": [
        731,
        732
      ],
      "op": "POP",
      "path": "3"
    },
    "4635": {
      "fn": "Oracle.withdraw",
      "offset": [
        7728,
        7959
      ],
      "op": "POP",
      "path": "5"
    },
    "4636": {
      "fn": "Oracle.withdraw",
      "offset": [
        7728,
        7959
      ],
      "op": "POP",
      "path": "5"
    },
    "4637": {
      "fn": "Oracle.withdraw",
      "jump": "o",
      "offset": [
        7728,
        7959
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4638": {
      "fn": "SafeMath.add",
      "offset": [
        1238,
        1366
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4639": {
      "fn": "SafeMath.add",
      "offset": [
        1319,
        1326
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 26
    },
    "4640": {
      "fn": "SafeMath.add",
      "offset": [
        1319,
        1326
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4641": {
      "fn": "SafeMath.add",
      "offset": [
        1319,
        1326
      ],
      "op": "ADD",
      "path": "4"
    },
    "4642": {
      "fn": "SafeMath.add",
      "offset": [
        1339,
        1346
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 27
    },
    "4643": {
      "fn": "SafeMath.add",
      "offset": [
        1339,
        1346
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4644": {
      "fn": "SafeMath.add",
      "offset": [
        1339,
        1346
      ],
      "op": "LT",
      "path": "4"
    },
    "4645": {
      "fn": "SafeMath.add",
      "offset": [
        1339,
        1346
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4646": {
      "fn": "SafeMath.add",
      "offset": [
        1332,
        1347
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x122B"
    },
    "4649": {
      "fn": "SafeMath.add",
      "offset": [
        1332,
        1347
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4650": {
      "fn": "SafeMath.add",
      "offset": [
        1332,
        1347
      ],
      "op": "INVALID",
      "path": "4"
    },
    "4651": {
      "fn": "SafeMath.add",
      "offset": [
        1332,
        1347
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4652": {
      "fn": "SafeMath.add",
      "offset": [
        1238,
        1366
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4653": {
      "fn": "SafeMath.add",
      "offset": [
        1238,
        1366
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4654": {
      "fn": "SafeMath.add",
      "offset": [
        1238,
        1366
      ],
      "op": "POP",
      "path": "4"
    },
    "4655": {
      "fn": "SafeMath.add",
      "offset": [
        1238,
        1366
      ],
      "op": "POP",
      "path": "4"
    },
    "4656": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        1238,
        1366
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4657": {
      "fn": "SafeMath.sub",
      "offset": [
        1060,
        1176
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4658": {
      "fn": "SafeMath.sub",
      "offset": [
        1120,
        1127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4660": {
      "fn": "SafeMath.sub",
      "offset": [
        1142,
        1150
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 28
    },
    "4661": {
      "fn": "SafeMath.sub",
      "offset": [
        1142,
        1150
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4662": {
      "fn": "SafeMath.sub",
      "offset": [
        1142,
        1150
      ],
      "op": "GT",
      "path": "4"
    },
    "4663": {
      "fn": "SafeMath.sub",
      "offset": [
        1142,
        1150
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4664": {
      "fn": "SafeMath.sub",
      "offset": [
        1135,
        1151
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x123D"
    },
    "4667": {
      "fn": "SafeMath.sub",
      "offset": [
        1135,
        1151
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4668": {
      "fn": "SafeMath.sub",
      "offset": [
        1135,
        1151
      ],
      "op": "INVALID",
      "path": "4"
    },
    "4669": {
      "fn": "SafeMath.sub",
      "offset": [
        1135,
        1151
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4670": {
      "op": "POP"
    },
    "4671": {
      "fn": "SafeMath.sub",
      "offset": [
        1164,
        1171
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 29
    },
    "4672": {
      "fn": "SafeMath.sub",
      "offset": [
        1164,
        1171
      ],
      "op": "SUB",
      "path": "4"
    },
    "4673": {
      "fn": "SafeMath.sub",
      "offset": [
        1164,
        1171
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4674": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1060,
        1176
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4675": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1512,
        1683
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4682": {
      "op": "EXP"
    },
    "4683": {
      "op": "SUB"
    },
    "4684": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1582,
        1605
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 30
    },
    "4685": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1582,
        1605
      ],
      "op": "AND",
      "path": "3"
    },
    "4686": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1582,
        1605
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4687": {
      "branch": 43,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1582,
        1605
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4688": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1574,
        1606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1258"
    },
    "4691": {
      "branch": 43,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1574,
        1606
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4692": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1574,
        1606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4694": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1574,
        1606
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4695": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1574,
        1606
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4696": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1574,
        1606
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4697": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1638,
        1643
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 31,
      "value": "0x0"
    },
    "4699": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1638,
        1643
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4700": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1638,
        1643
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4701": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1617,
        1655
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4703": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1617,
        1655
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4710": {
      "op": "EXP"
    },
    "4711": {
      "op": "SUB"
    },
    "4712": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1617,
        1655
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4713": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1617,
        1655
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4714": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1617,
        1655
      ],
      "op": "AND",
      "path": "3"
    },
    "4715": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1617,
        1655
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4716": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1638,
        1643
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4717": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1638,
        1643
      ],
      "op": "AND",
      "path": "3"
    },
    "4718": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1638,
        1643
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4719": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1617,
        1655
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4752": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1617,
        1655
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4753": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1617,
        1655
      ],
      "op": "LOG3",
      "path": "3"
    },
    "4754": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1661,
        1666
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 32,
      "value": "0x0"
    },
    "4756": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1661,
        1678
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4757": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1661,
        1678
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4758": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4779": {
      "op": "NOT"
    },
    "4780": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1661,
        1678
      ],
      "op": "AND",
      "path": "3"
    },
    "4781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4785": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4787": {
      "op": "EXP"
    },
    "4788": {
      "op": "SUB"
    },
    "4789": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1661,
        1678
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4790": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1661,
        1678
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4791": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1661,
        1678
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4792": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1661,
        1678
      ],
      "op": "AND",
      "path": "3"
    },
    "4793": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1661,
        1678
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4794": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1661,
        1678
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4795": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1661,
        1678
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4796": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1661,
        1678
      ],
      "op": "OR",
      "path": "3"
    },
    "4797": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1661,
        1678
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4798": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1661,
        1678
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4799": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1512,
        1683
      ],
      "op": "JUMP",
      "path": "3"
    }
  },
  "sha1": "55ece7b85f437c738351e2661414eaafa4060d76",
  "source": "pragma solidity 0.4.24;\n\nimport \"@chainlink/contracts/src/v0.4/vendor/Ownable.sol\";\nimport \"@chainlink/contracts/src/v0.4/vendor/SafeMath.sol\";\nimport \"@chainlink/contracts/src/v0.4/interfaces/ChainlinkRequestInterface.sol\";\nimport \"@chainlink/contracts/src/v0.4/interfaces/OracleInterface.sol\";\nimport \"@chainlink/contracts/src/v0.4/interfaces/LinkTokenInterface.sol\";\n\n/**\n * @title The Chainlink Oracle contract\n * @notice Node operators can deploy this contract to fulfill requests sent to them\n * @notice This is a modified Oracle.sol for easier testing\n */\ncontract Oracle is ChainlinkRequestInterface, OracleInterface, Ownable {\n  using SafeMath for uint256;\n\n  uint256 public payment = 0;\n  address public callbackAddress;\n  bytes4 public callbackFunctionId;\n  uint256 public exp_time;\n\n  uint256 constant public EXPIRY_TIME = 5 minutes;\n  uint256 constant private MINIMUM_CONSUMER_GAS_LIMIT = 400000;\n  // We initialize fields to 1 instead of 0 so that the first invocation\n  // does not cost more gas.\n  uint256 constant private ONE_FOR_CONSISTENT_GAS_COST = 1;\n  uint256 constant private SELECTOR_LENGTH = 4;\n  uint256 constant private EXPECTED_REQUEST_WORDS = 2;\n  uint256 constant private MINIMUM_REQUEST_LENGTH = SELECTOR_LENGTH + (32 * EXPECTED_REQUEST_WORDS);\n\n  LinkTokenInterface internal LinkToken;\n  mapping(bytes32 => bytes32) public commitments;\n  mapping(address => bool) private authorizedNodes;\n  uint256 private withdrawableTokens = ONE_FOR_CONSISTENT_GAS_COST;\n\n  event OracleRequest(\n    bytes32 indexed specId,\n    address requester,\n    bytes32 requestId,\n    uint256 payment,\n    address callbackAddr,\n    bytes4 callbackFunctionId,\n    uint256 cancelExpiration,\n    uint256 dataVersion,\n    bytes data\n  );\n\n  event CancelOracleRequest(\n    bytes32 indexed requestId\n  );\n\n  /**\n   * @notice Deploy with the address of the LINK token\n   * @dev Sets the LinkToken address for the imported LinkTokenInterface\n   * @param _link The address of the LINK token\n   */\n  constructor(address _link) public Ownable() {\n    LinkToken = LinkTokenInterface(_link); // external but already deployed and unalterable\n  }\n\n  /**\n   * @notice Called when LINK is sent to the contract via `transferAndCall`\n   * @dev The data payload's first 2 words will be overwritten by the `_sender` and `_amount`\n   * values to ensure correctness. Calls oracleRequest.\n   * @param _sender Address of the sender\n   * @param _amount Amount of LINK sent (specified in wei)\n   * @param _data Payload of the transaction\n   */\n  function onTokenTransfer(\n    address _sender,\n    uint256 _amount,\n    bytes _data\n  )\n    public\n    onlyLINK\n    validRequestLength(_data)\n    permittedFunctionsForLINK(_data)\n  {\n    assembly { // solhint-disable-line no-inline-assembly\n      mstore(add(_data, 36), _sender) // ensure correct sender is passed\n      mstore(add(_data, 68), _amount) // ensure correct amount is passed\n    }\n    // solhint-disable-next-line avoid-low-level-calls\n    require(address(this).delegatecall(_data), \"Unable to create request\"); // calls oracleRequest\n  }\n\n  /**\n   * @notice Creates the Chainlink request\n   * @dev Stores the hash of the params as the on-chain commitment for the request.\n   * Emits OracleRequest event for the Chainlink node to detect.\n   * @param _sender The sender of the request\n   * @param _payment The amount of payment given (specified in wei)\n   * @param _specId The Job Specification ID\n   * @param _callbackAddress The callback address for the response\n   * @param _callbackFunctionId The callback function ID for the response\n   * @param _nonce The nonce sent by the requester\n   * @param _dataVersion The specified data version\n   * @param _data The CBOR payload of the request\n   */\n  function oracleRequest(\n    address _sender,\n    uint256 _payment,\n    bytes32 _specId,\n    address _callbackAddress,\n    bytes4 _callbackFunctionId,\n    uint256 _nonce,\n    uint256 _dataVersion,\n    bytes _data\n  )\n    external\n    onlyLINK\n    checkCallbackAddress(_callbackAddress)\n  {\n    payment = _payment;\n    callbackAddress = _callbackAddress;\n    callbackFunctionId = _callbackFunctionId;\n\n\n    bytes32 requestId = keccak256(abi.encodePacked(_sender, _nonce));\n    require(commitments[requestId] == 0, \"Must use a unique ID\");\n    // solhint-disable-next-line not-rely-on-time\n    uint256 expiration = now.add(EXPIRY_TIME);\n    exp_time = expiration;\n\n    commitments[requestId] = keccak256(\n      abi.encodePacked(\n        _payment,\n        _callbackAddress,\n        _callbackFunctionId,\n        expiration\n      )\n    );\n\n    emit OracleRequest(\n      _specId,\n      _sender,\n      requestId,\n      _payment,\n      _callbackAddress,\n      _callbackFunctionId,\n      expiration,\n      _dataVersion,\n      _data);\n  }\n\n  /**\n   * @notice Called by the Chainlink node to fulfill requests\n   * @dev Given params must hash back to the commitment stored from `oracleRequest`.\n   * Will call the callback address' callback function without bubbling up error\n   * checking in a `require` so that the node can get paid.\n   * @param _requestId The fulfillment request ID that must match the requester's\n   * @param _payment The payment amount that will be released for the oracle (specified in wei)\n   * @param _callbackAddress The callback address to call for fulfillment\n   * @param _callbackFunctionId The callback function ID to use for fulfillment\n   * @param _expiration The expiration that the node should respond by before the requester can cancel\n   * @param _data The data to return to the consuming contract\n   * @return Status if the external call was successful\n   */\n  function fulfillOracleRequest(\n    bytes32 _requestId,\n    uint256 _payment,\n    address _callbackAddress,\n    bytes4 _callbackFunctionId,\n    uint256 _expiration,\n    bytes32 _data\n  )\n    external\n    onlyAuthorizedNode\n    isValidRequest(_requestId)\n    returns (bool)\n  {\n    bytes32 paramsHash = keccak256(\n      abi.encodePacked(\n        _payment,\n        _callbackAddress,\n        _callbackFunctionId,\n        _expiration\n      )\n    );\n    \n    require(commitments[_requestId] == paramsHash, \"Params do not match request ID\");\n    withdrawableTokens = withdrawableTokens.add(_payment);\n    delete commitments[_requestId];\n    require(gasleft() >= MINIMUM_CONSUMER_GAS_LIMIT, \"Must provide consumer enough gas\");\n    // All updates to the oracle's fulfillment should come before calling the\n    // callback(addr+functionId) as it is untrusted.\n    // See: https://solidity.readthedocs.io/en/develop/security-considerations.html#use-the-checks-effects-interactions-pattern\n    return _callbackAddress.call(_callbackFunctionId, _requestId, _data); // solhint-disable-line avoid-low-level-calls\n  }\n\n  /**\n   * @notice Use this to check if a node is authorized for fulfilling requests\n   * @param _node The address of the Chainlink node\n   * @return The authorization status of the node\n   */\n  function getAuthorizationStatus(address _node) external view returns (bool) {\n    return authorizedNodes[_node];\n  }\n\n  /**\n   * @notice Sets the fulfillment permission for a given node. Use `true` to allow, `false` to disallow.\n   * @param _node The address of the Chainlink node\n   * @param _allowed Bool value to determine if the node can fulfill requests\n   */\n  function setFulfillmentPermission(address _node, bool _allowed) external onlyOwner {\n    authorizedNodes[_node] = _allowed;\n  }\n\n  /**\n   * @notice Allows the node operator to withdraw earned LINK to a given address\n   * @dev The owner of the contract can be another wallet and does not have to be a Chainlink node\n   * @param _recipient The address to send the LINK token to\n   * @param _amount The amount to send (specified in wei)\n   */\n  function withdraw(address _recipient, uint256 _amount)\n    external\n    onlyOwner\n    hasAvailableFunds(_amount)\n  {\n    withdrawableTokens = withdrawableTokens.sub(_amount);\n    assert(LinkToken.transfer(_recipient, _amount));\n  }\n\n  /**\n   * @notice Displays the amount of LINK that is available for the node operator to withdraw\n   * @dev We use `ONE_FOR_CONSISTENT_GAS_COST` in place of 0 in storage\n   * @return The amount of withdrawable LINK on the contract\n   */\n  function withdrawable() external view onlyOwner returns (uint256) {\n    return withdrawableTokens.sub(ONE_FOR_CONSISTENT_GAS_COST);\n  }\n\n  /**\n   * @notice Allows requesters to cancel requests sent to this oracle contract. Will transfer the LINK\n   * sent for the request back to the requester's address.\n   * @dev Given params must hash to a commitment stored on the contract in order for the request to be valid\n   * Emits CancelOracleRequest event.\n   * @param _requestId The request ID\n   * @param _payment The amount of payment given (specified in wei)\n   * @param _callbackFunc The requester's specified callback address\n   * @param _expiration The time of the expiration for the request\n   */\n  function cancelOracleRequest(\n    bytes32 _requestId,\n    uint256 _payment,\n    bytes4 _callbackFunc,\n    uint256 _expiration\n  ) external {\n    bytes32 paramsHash = keccak256(\n      abi.encodePacked(\n        _payment,\n        msg.sender,\n        _callbackFunc,\n        _expiration)\n    );\n    require(paramsHash == commitments[_requestId], \"Params do not match request ID\");\n    // solhint-disable-next-line not-rely-on-time\n    require(_expiration <= now, \"Request is not expired\");\n\n    delete commitments[_requestId];\n    emit CancelOracleRequest(_requestId);\n\n    assert(LinkToken.transfer(msg.sender, _payment));\n  }\n\n  // MODIFIERS\n\n  /**\n   * @dev Reverts if amount requested is greater than withdrawable balance\n   * @param _amount The given amount to compare to `withdrawableTokens`\n   */\n  modifier hasAvailableFunds(uint256 _amount) {\n    require(withdrawableTokens >= _amount.add(ONE_FOR_CONSISTENT_GAS_COST), \"Amount requested is greater than withdrawable balance\");\n    _;\n  }\n\n  /**\n   * @dev Reverts if request ID does not exist\n   * @param _requestId The given request ID to check in stored `commitments`\n   */\n  modifier isValidRequest(bytes32 _requestId) {\n    require(commitments[_requestId] != 0, \"Must have a valid requestId\");\n    _;\n  }\n\n  /**\n   * @dev Reverts if `msg.sender` is not authorized to fulfill requests\n   */\n  modifier onlyAuthorizedNode() {\n    require(authorizedNodes[msg.sender] || msg.sender == owner, \"Not an authorized node to fulfill requests\");\n    _;\n  }\n\n  /**\n   * @dev Reverts if not sent from the LINK token\n   */\n  modifier onlyLINK() {\n    require(msg.sender == address(LinkToken), \"Must use LINK token\");\n    _;\n  }\n\n  /**\n   * @dev Reverts if the given data does not begin with the `oracleRequest` function selector\n   * @param _data The data payload of the request\n   */\n  modifier permittedFunctionsForLINK(bytes _data) {\n    bytes4 funcSelector;\n    assembly { // solhint-disable-line no-inline-assembly\n      funcSelector := mload(add(_data, 32))\n    }\n    require(funcSelector == this.oracleRequest.selector, \"Must use whitelisted functions\");\n    _;\n  }\n\n  /**\n   * @dev Reverts if the callback address is the LINK token\n   * @param _to The callback address\n   */\n  modifier checkCallbackAddress(address _to) {\n    require(_to != address(LinkToken), \"Cannot callback to LINK\");\n    _;\n  }\n\n  /**\n   * @dev Reverts if the given payload is less than needed to create a request\n   * @param _data The request payload\n   */\n  modifier validRequestLength(bytes _data) {\n    require(_data.length >= MINIMUM_REQUEST_LENGTH, \"Invalid request length\");\n    _;\n  }\n\n}\n",
  "sourceMap": "563:10958:5:-;;;694:1;669:26;;1069:1;1422:64;;1995:141;8:9:-1;5:2;;;30:1;27;20:12;5:2;1995:141:5;;;;;;;;;;;;;567:5:3;:18;;-1:-1:-1;;;;;;567:18:3;;;575:10;567:18;;;;2045:9:5;:37;;-1:-1:-1;;;;;2045:37:5;;;;;;;;;;;;;563:10958;;;;;;",
  "sourcePath": "contracts/test_contracts/Oracle.sol",
  "type": "contract"
}